@model HonanClaimsWebApiAccess1.Models.AdminLoginDetail.CustomerPortalAdminModel

@{
    ViewBag.Title = "AdminDetail";
    Layout = "~/Views/Shared/_Layout.cshtml";
}

@using (Html.BeginForm("AddPortalAdminRecord", "AdminList", FormMethod.Post,
                new
                {
                    enctype = "multipart/form-data",
                    id = "FileUploadForm",
                    name = "ImgForm",
                    //target = "UploadTarget",
                }))
{

    @Html.HiddenFor(m => m.H_Customerportaladminid)
    <div class="main-container">
        <div class="row mb-15">
            <div class="col-md-12">
                <div class="page-title">
                    <h3>Admin Detail</h3>
                </div>
            </div>
        </div>

        <div class="row">
            <div class="col-md-4 detail-section">
                <div class="form-group">
                    <label>Account Name</label>
                    <div class="input-group">
                        @Html.TextBoxFor(m => m.Accountname, new { @class = "form-control" })
                        @Html.HiddenFor(m => m.Account_Id)
                        @Html.HiddenFor(m => m.IsNew)
                        <span class="input-group-addon pointer" id="btnPolicyLookup" data-toggle="modal" data-target="#PolicyModal"><i class="fa fa-search" aria-hidden="true"></i></span>
                    </div>
                    @*@Html.ValidationMessageFor(o => o.Oc_Num, String.Empty, new { @class = "parsley-errors-list filled", @style = "color:red" })*@
                </div>
                @{
                    List<SelectListItem> listItems = new List<SelectListItem>();
                    listItems.Add(new SelectListItem
                    {
                        Text = "Risksmart GCC",
                        Value = "Risksmart GCC"
                    });
                    listItems.Add(new SelectListItem
                    {
                        Text = "Risksmart Property",
                        Value = "Risksmart Property",
                    });
                    listItems.Add(new SelectListItem
                    {
                        Text = "Property Claims",
                        Value = "Property Claims",
                    });

                    listItems.Add(new SelectListItem
                    {
                        Text = "GCC Claims",
                        Value = "GCC Claims"
                    });
                }
                <div class="form-group">
                    <label for="Team">Claim Team</label>
                    @Html.DropDownListFor(model => model.Claim_Team, listItems, "-- Select Claim --", new { @class = "form-control" })
                </div>
                @{
                    List<SelectListItem> OnlineClaims = new List<SelectListItem>();
                    OnlineClaims.Add(new SelectListItem
                    {
                        Text = "Yes",
                        Value = "Yes"
                    });
                    OnlineClaims.Add(new SelectListItem
                    {
                        Text = "No",
                        Value = "No",
                    });
                }
                <div class="form-group">
                    <label for="email">Can add Online Claims</label>
                    @Html.DropDownListFor(model => model.Account_Can_Add_Claims, OnlineClaims, "-- Select --", new { @class = "form-control" })
                </div>
                <div class="form-group">
                    <label for="email">Mannual Claim Form</label>
                    <div class="form-group">
                        <a href="@Model.Manualclaim_Form_Path">@Model.Manualclaim_Form</a>
                        @Html.HiddenFor(m => m.Manualclaim_Form)
                        <input name="claimupload" id="claimupload" type="file">
                    </div>
                </div>
                @{
                    List<SelectListItem> BillingMethod = new List<SelectListItem>();
                    BillingMethod.Add(new SelectListItem
                    {
                        Text = "Per Hour",
                        Value = "Per Hour"
                    });
                    BillingMethod.Add(new SelectListItem
                    {
                        Text = "Per Claim",
                        Value = "Per Claim",
                    });
                    BillingMethod.Add(new SelectListItem
                    {
                        Text = "Per Annul",
                        Value = "Per Annul",
                    });
                    BillingMethod.Add(new SelectListItem
                    {
                        Text = "No Billing",
                        Value = "No Billing",
                    });
                }

                <div class="form-group">
                    <label for="email">Billing Method</label>
                    @Html.DropDownListFor(model => model.Billing_Method, BillingMethod, "-- Select Method --", new { @class = "form-control" })
                </div>

                <div class="form-group">
                    <label for="email">Fee Per Hour</label>
                    @Html.TextBoxFor(m => m.Fee_Per_Hour, new { @class = "form-control" })
                </div>
                <div class="form-group">
                    <label for="email">Fee Per Billing Method</label>
                    @Html.TextBoxFor(m => m.Fee_Per_Billing_Method, new { @class = "form-control" })
                </div>
            </div>
            <div class="col-md-8 img-upload-section">
                <div class="row">
                    <div class="col-md-6">
                        <input onchange="OnchangeLogoImage(this)" id="logoimgupload" name="logoimgupload" type="file">
                    </div>
                    <div class="col-md-6">
                        <div class="pull-right">
                            <button type="button" id="removelogo" class="btn btn-primary">Remove</button>
                        </div>
                    </div>
                </div>
                <div>
                    @if (Model.IsNew)
                    {
                        <div class="img-logo-preview-wraper">
                            <img id="logoImg" class="img-logo-preview">
                        </div>
                    }
                    else
                    {
                        <div class="img-logo-preview-wraper">
                            <img id="logoImg" src="data:image/png;base64,@Model.Customer_Logo" class="img-logo-preview">
                        </div>
                    }
                </div>
            </div>
        </div>
    </div>
    <div class="main-container">
        <div class="row mt-15 mb-15">
            <div class="col-md-12">
                <input type="submit" class="btn btn-primary" value="Submit" />
            </div>
        </div>
    </div>
                    }
<hr />
<div class="main-container">
    <div class="row mt-15 mb-15">
        <div class="col-md-12">
            <div class="pull-right mb-15">
                <button type="button" id="newLogin" class="btn btn-primary">New Login</button>
            </div>
        </div>
        <div class="col-md-12">
            <div id="loginGrid"></div>
        </div>
    </div>
</div>


<!--Modal-->
<div id="OcModal" class="modal fade OcModal" role="dialog" data-keyboard="false">
    <div class="modal-dialog">
        <div class="modal-content">
            <div class="modal-header">
                <button type="button" class="close" data-dismiss="modal">&times;</button>
                <h4 class="modal-title">Admin Lookup</h4>
            </div>

            <div class="modal-body">
                <div class="input-group mb-20">
                    <input type="text" class="form-control" placeholder="" id="Accsearch" aria-describedby="basic-addon2">
                    <span class="input-group-addon" id="basic-addon2"><i class="fa fa-search" aria-hidden="true"></i></span>
                </div>
                <div id="lookupAccountGrid"></div>
            </div>
            <div class="modal-footer">
                <button type="button" class="btn btn-default" data-dismiss="modal">Close</button>
            </div>
        </div>
    </div>
</div>


<!--Modal-->
<div id="ConModal" class="modal fade OcModal" role="dialog" data-keyboard="false">
    <div class="modal-dialog">
        <div class="modal-content">
            <div class="modal-header">
                <button type="button" class="close" data-dismiss="modal">&times;</button>
                <h4 class="modal-title">Contact Lookup</h4>
            </div>

            <div class="modal-body">
                <input style="width:200px; text-align:right;" type="text" class="form-control" id="Accsearch">
                <div id="lookupAccountGrid"></div>
            </div>
            <div class="modal-footer">
                <button type="button" class="btn btn-default" data-dismiss="modal">Close</button>
            </div>
        </div>
    </div>
</div>

<!--Modal-->
<div id="LoginDataModal" class="modal fade OcModal" role="dialog" data-keyboard="false">
    <div class="modal-dialog">
        <div class="modal-content">
            <div class="modal-header">
                <button type="button" class="close" data-dismiss="modal">&times;</button>
                <h4 class="modal-title">Login Detail</h4>
            </div>

            <div class="modal-body ">
                <input id="portalLoginId" style="display:none" />
                <input type="text" class="form-control" style="display:none" id="ContactId">
                <div id="error" style="display:none;" class="alert alert-danger">
                    <strong>Error</strong> <span id="Errormsg"></span>
                </div>
                <div class="form-group">
                    <input id="isactive" type="checkbox" checked value="">
                    <label class="ml-15">Is Active</label>
                </div>
                <div class="form-group">
                    <label>Contact Name</label>
                    <div class="demo-section k-content">
                        <input id="products" style="width: 100%;" />
                    </div>
                    @*@Html.ValidationMessageFor(o => o.Oc_Num, String.Empty, new { @class = "parsley-errors-list filled", @style = "color:red" })*@
                </div>
                <div class="form-group">
                    <label>User Name</label>
                    <input type="text" class="form-control" id="username">
                </div>
                <div class="form-group">
                    <label>Password</label>
                    <input type="text" class="form-control" id="Password">
                </div>
                <a style="float:right;" id="GenaratePassword">Genarate Password</a>
                <div class="form-group">
                    <label>Email</label>
                    <input type="text" class="form-control" id="Email">
                </div>
            </div>
            <div class="modal-footer">
                <button type="button" class="btn btn-default mr-20">Cancel</button>
                <button id="Addlogin" type="button" class="btn btn-primary">Save</button>
            </div>
        </div>
    </div>
</div>


<script>
    $(document).ready(function () {

        $("#btnPolicyLookup").click(function () {
            $('#Accsearch').val('');
            $("#lookupAccountGrid").kendoGrid({
                dataSource: {
                    type: "json",
                    transport: {
                        read: "/AdminList/GetLookupAccounts"
                    },
                    pageSize: 10
                },
                dataBound: function (e) {
                    $('#OcModal').modal('show');
                },
                height: 550,
                sortable: true,
                serverPaging: true,
                pageable: {
                    refresh: true,
                    pageSizes: true,
                    buttonCount: 10
                },
                columns: [{
                    hidden: true,
                    field: "AccountId",
                    title: "AccountId"
                },
                {
                    template: '<a id="#= AccountId #" onclick="accountClick(this)">#= AccountName #</a>',
                    title: "Account Name",
                },
                {
                    field: "AccountType",
                    title: " Account Type",
                }
                ]
            });

        });

        $("#claimupload").change(function (input) {
            var file1 = $('#claimupload').get(0).files;
            if (file1 != null) {
                $('#displaytext').text(file1[0].name);
                $('#Manualclaim_Form').val(file1[0].name);
            }
            //$('#Manualclaim_Form').text()
        });

        var model = @Html.Raw(Json.Encode(Model));
        //setInitialDetails(isNew,adminId)
        loadLogins(model.H_Customerportaladminid);

        function loadLogins(adminId) {
            $("#loginGrid").kendoGrid({
                dataSource: {
                    type: "json",
                    transport: {
                        read: "/AdminList/GetAdminLoginAccounts?adminId=" + adminId
                    },
                    pageSize: 10
                },
                height: 200,
                sortable: true,
                columns: [{
                    hidden: true,
                    field: "H_PortalLoginId",
                    title: "H_PortalLoginId"
                },
                {
                    template: "#if(ActiveLogin == 'T'){# True #} else{# #= 'False' #  #}#",
                    title: "IsActive",
                },
                {
                    field: "ContactName",
                    title: "Contact Name",
                }, {
                    field: "UserName",
                    title: "User Name",
                }, {
                    field: "Password",
                    title: "Password",
                },
                {
                    field: "LastLogin",
                    title: "Last Login",
                }
                ]
            });
        }
    });

    $("#Accsearch").keyup(function () {
        var val = $('#Accsearch').val();
        $("#lookupAccountGrid").data("kendoGrid").dataSource.filter({
            logic: "or",
            filters: [
                {
                    field: "AccountName",
                    operator: "contains",
                    value: val,
                },
                {
                    field: "AccountType",
                    operator: "contains",
                    value: val
                },

            ]
        });

    });
    function accountClick(e) {
        $('#AccountId').val(e.id);
        $("#Accountname").val(e.text);
        $('#OcModal').modal('hide');
    }

    function OnchangeLogoImage(input) {
        if (input.files && input.files[0]) {
            var reader = new FileReader();

            reader.onload = function (e) {
                $('#logoImg').attr('src', e.target.result);
            };

            reader.readAsDataURL(input.files[0]);
        }
    }

    $("#removelogo").click(function () {
        $('#file_reset').trigger('click');
        $('#logoImg').attr('src', "");
    });

    $('#newLogin').click(function () {
        var accId = $('#Account_Id').val();
        if (accId == null || accId == "") { return; };
        LoadContacts(accId);
        $('#LoginDataModal').modal('show');
    })

    $('#GenaratePassword').click(function () {
        var random = Math.random().toString(36).substring(6);
        $('#Password').val(random);
    })

    $('#Addlogin').click(function () {
        var loginNew = false;
        var adminId = $("#H_Customerportaladminid").val();
        if (adminId == null || adminId=="") {
            setError("Please Add Admin record", true);
            return;
        }

        setError("", false);
        var portalId = $('#portalLoginId').val();
        if (portalId == null || portalId == "") { loginNew = true; }


        var model = {
            H_PortalLoginId: loginNew == true ? null : portalId,
            H_PortalLoginAdminId: adminId,
            ActiveLogin: $('#isactive').val(),
            ContactName: $('#ContactName').val(),
            ContactId: $('#ContactId').val(),
            UserName: $('#username').val(),
            Password: $('#Password').val(),
            Email: $('#Email').val(),
            IsNew: loginNew
        }

        $.ajax({
            type: 'POST',
            url: "/AdminList/AddAdminLogin",
            data: model,
            success: function (resultData) {
                if (resultData == false) {
                    setError("Error adding login detail", true);
                } else {
                    $('#loginGrid').data('kendoGrid').dataSource.read();
                    $('#loginGrid').data('kendoGrid').refresh();
                    setError("", false);
                    $('#LoginDataModal').modal('hide');
                }
            }
        });



    })

    $('#btncontactlook').click(function () {

    })

    function setError(errormsg, isshow) {
        if (isshow) {
            $('#Errormsg').text(errormsg);
            $('#error').show();
        } else {
            $('#Errormsg').text(errormsg);
            $('#error').hide();
        }
    }

    function LoadContacts(accountId) {
        var listdata = null;
        $.get("/AdminList/GetContactNames?accountId=" + accountId, function (data) {
            listdata = data;
            $("#products").kendoAutoComplete({
                dataTextField: "ContactName",
                filter: "contains",
                minLength: 2,
                dataSource: data,
                select: onSelect
            });
        });

        function onSelect(e) {
            var dataItem = this.dataItem(e.item.index());
            $('#ContactId').val(dataItem.ContactId);
        }
    }

</script>
