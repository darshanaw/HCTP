
@{
    ViewBag.Title = "Risksmart Property Claim";
}

@model HonanClaimsWebApi.Models.Claim.RisksmartPropertyClaim


<!-- DATETIMEPICKER-->
<link href="~/Content/vendor/eonasdan-bootstrap-datetimepicker/build/css/bootstrap-datetimepicker.min.css" rel="stylesheet" />
<script src="~/Content/vendor/eonasdan-bootstrap-datetimepicker/build/js/bootstrap-datetimepicker.min.js"></script>

<!-- SELECT2-->
<link rel="stylesheet" href="~/Content/vendor/select2/dist/css/select2.css">
<link rel="stylesheet" href="~/Content/vendor/select2-bootstrap-theme/dist/select2-bootstrap.css">

<style>
    .disabled {
        background-color: lightgray;
    }
</style>

<script>
    $(function () {

        $('.dateCalendar').datetimepicker({
            format: 'DD/MM/YYYY'
        });
    })
</script>

<br />

@{
    HonanClaimsWebApiAccess1.LoginServices.ClaimTeamLoginModel client = (HonanClaimsWebApiAccess1.LoginServices.ClaimTeamLoginModel)Session[HonanClaimsPortal.Helpers.SessionHelper.claimTeamLogin];
}


<div class="col-md-12" style="text-align: center; font-size: small;">
    <div class="panel widget bg-info">
        <div class="row row-table">
            <div class="col-xs-12 pv-xs">
                <div class="h3 m0 text-bold">Claim Ref # @Html.DisplayFor(item => item.Claim_Reference_Num) - @Html.DisplayFor(item => item.Account_Name) </div>
            </div>
        </div>
    </div>
</div>
<ul class="nav nav-tabs">
    <li class="active"><a href="#tabClaimDetail" data-toggle="tab" aria-expanded="true">Claim Detail</a></li>
    @if (Model.Claim_Type == HonanClaimsPortal.Helpers.ClaimType.Claim.ToString())
    {
        <li><a href="#tabActivityTasks" data-toggle="tab"><div id="activityTaskCount" class="pull-right label label-success ml-10"></div><span>Activity Tasks</span></a></li>
    }
    <li><a href="#tabKey_Contacts_Dates" data-toggle="tab">Key Contacts\Dates </a></li>
    <li><a href="#tabAttachments" data-toggle="tab">Attachments</a> </li>
    <li><a href="#tabCustomerDocs" data-toggle="tab">Customer Docs</a></li>
    <li><a href="#tabBillings" data-toggle="tab">Billings</a></li>
    <li><a href="#tabPayments" data-toggle="tab"><div id="paymentsCount" class="pull-right label label-success ml-10"></div><span>Payments</span></a></li>
    <li><a href="#tabFileNotes" data-toggle="tab"><div id="fileNotesCount" class="pull-right label label-success ml-10"></div><span>File Notes</span></a></li>

</ul>

@if (client.Teams.Contains("Billable Lawyers") && Model.BillingMethod.ToLower() == "per hour" && Model.Claim_Type != HonanClaimsPortal.Helpers.ClaimType.Notification.ToString() && !client.IsTimeslipChecker)
{
    @Html.Hidden("isTimerAllowed", "true")
}
else
{
    @Html.Hidden("isTimerAllowed", "false")
}


@{
    string controlVisibilty = "";
    controlVisibilty = "block";/*Model.Claim_Type == "Notification" ? "none" : "block";*/
}

<!-- END wizard steps indicator-->
<!-- START Wizard Step inputs-->
@*@Html.ValidationSummary(false, "", new { @class = "text-danger" })*@

@{
    string disable = ""; /*string.IsNullOrEmpty(@Model.Claim_Reference_Num) ? "" : "disabled";*/
    var message = TempData["ErrorMsg"];
    TempData.Remove("ErrorMsg");
}


<div class="tab-content">

    <div class="tab-pane active" id="tabClaimDetail">
        @using (Html.BeginForm("DetailRisksmartPropertyClaim", "RisksmartPropertyClaim", FormMethod.Post, new { id = "formRisksmartDetailPropertyClaim", enctype = "multipart/form-data" }))
        {
            @Html.HiddenFor(o => o.Accountid)
            @Html.HiddenFor(o => o.BillingMethod)
            @Html.HiddenFor(o => o.Broker_Account_Id)
            @Html.HiddenFor(o => o.Broker_Name_Id)
            @Html.HiddenFor(o => o.Claim_Team)
            @Html.HiddenFor(o => o.H_Claimsid)
            @Html.HiddenFor(o => o.Claim_Reference_Num)

            @Html.ValidationSummary(false, "", new { @class = "text-danger" })
            <div class="panel panel-default">

                <div class="panel-body">
                    <div class="form-horizontal">

                        <div class="col-md-12 m0 p0">
                            <br />
                            <fieldset>
                                <div class="col-md-12">
                                    <div class="col-md-12">
                                        <div class="text-right">
                                            <button type="button" onclick="Cancel()" class="mb-sm btn btn-default">Cancel</button>
                                            <button type="submit" class="mb-sm btn btn-primary">Save</button>
                                        </div>
                                    </div>
                                </div>
                                <div class="col-md-6">
                                    @*<div class="col-md-4"></div>
                                    <div class="col-md-6">
                                        <div class="col-md-12" style="text-align: center; font-size: small;">
                                            <div class="panel widget bg-primary">
                                                <div class="row row-table">
                                                    <div class="col-xs-12 pv-xs">
                                                        <div class="h3 m0 text-bold">@Html.DisplayFor(item => item.Claim_Reference_Num)</div>
                                                        <div class="text-uppercase">Claim Ref #</div>
                                                    </div>
                                                </div>
                                            </div>
                                            
                                        </div>
                                    </div>
                                    <div class="col-md-2"></div>*@
                                    <div class="form-group" style="padding-bottom:4px">
                                        <label for="input-id-1" class="col-sm-3 control-label input-sm">Account Name</label>
                                        <div class="col-sm-9">
                                            <div class="input-group">
                                                @if (string.IsNullOrEmpty(Model.Account_Name))
                                                {
                                                    @Html.TextBoxFor(o => o.Account_Name, new { @class = "form-control input-sm", @maxlength = 100 })

                                                    <span id="ocNoModal" class="input-group-btn" data-toggle="modal" data-target="#AccountModal">

                                                        <button type="button" class="mb-sm btn btn-danger btn-sm btn-outline" style="padding-bottom: 3.5px">
                                                            <i class="fa fa-binoculars"></i>
                                                        </button>
                                                    </span>
                                                }
                                                else
                                                {
                                                    @Html.TextBoxFor(o => o.Account_Name, new { @class = "form-control input-sm disabled", @maxlength = 100, @readonly = true })
                                                    <span id="ocNoModal" class="input-group-btn" data-toggle="modal" data-target="#AccountModal">

                                                        <button type="button" class="mb-sm btn btn-info btn-sm btn-outline" style="padding-bottom: 3.5px">
                                                            <i class="fa fa-binoculars"></i>
                                                        </button>
                                                    </span>
                                                }
                                                @*@Html.TextBoxFor(o => o.Account_Name, new { @class = "form-control input-sm", @maxlength = 100 })

                                                <span id="ocNoModal" class="input-group-btn" data-toggle="modal" data-target="#AccountModal">
                                                    <button type="button" class="mb-sm btn btn-info btn-sm btn-outline" style="padding-bottom: 3.5px">
                                                        <i class="fa fa-binoculars"></i>
                                                    </button>
                                                </span>*@
                                            </div>
                                        </div>
                                    </div>
                                    <div class="form-group mb">
                                        <label for="input-id-1" class="col-sm-3 control-label input-sm">Assigned To</label>
                                        <div class="col-sm-9">

                                            @if (HonanClaimsPortal.Helpers.ClaimHelper.IsManager(HonanClaimsPortal.Helpers.ClaimTeamManagers.RisksmartPropertyManager))
                                            {
                                                @Html.DropDownListFor(o => o.Assigned_User, new SelectList(Model.Assigned_User_List, "Code", "Text"), new { @class = "form-control input-sm" })
                                            }
                                            else
                                            {
                                                @Html.TextBoxFor(o => o.Assigned_User, new { @class = "form-control input-sm disabled", @readonly = true })
                                            }
                                        </div>
                                    </div>

                                    <div class="form-group mb">
                                        <label class="col-sm-3 control-label input-sm">Assigned Date</label>
                                        <div class="col-sm-9">
                                            @Html.TextBoxFor(o => o.Assigned_Date, "{0:dd/MM/yyyy}", new { @class = "form-control input-sm disabled", @readonly = true })
                                        </div>
                                    </div>


                                </div>
                                <div class="col-md-6">
                                  
                                    <div class="form-group mb top-padding-eight">
                                        <label class="col-sm-3 control-label input-sm">Claim Status</label>
                                        <div class="col-sm-9">
                                            @Html.DropDownListFor(o => o.Claim_Status, new SelectList(Model.Claim_Status_List, "Text", "Text"), "", new { @id = "ddlStatus", @class = "form-control input-sm" })
                                        </div>
                                    </div>

                                    <div class="form-group mb">
                                        <label class="col-sm-3 control-label input-sm">Claim Stage</label>
                                        <div class="col-sm-9">
                                            @Html.TextBoxFor(o => o.Claim_Stage, new { @class = "form-control input-sm disabled", @readonly = true })
                                        </div>
                                    </div>

                                    <div class="form-group mb">
                                        <label for="input-id-1" class="col-sm-3 control-label input-sm">Claim Type</label>
                                        <div class="col-sm-9">
                                            @Html.TextBoxFor(o => o.Claim_Type, new { @class = "form-control input-sm disabled", @readonly = true })
                                        </div>
                                    </div>
                                    <div class="form-group mb">
                                        <label for="input-id-1" class="col-sm-3 control-label input-sm">Claim Team</label>
                                        <div class="col-sm-9">
                                            @Html.TextBoxFor(o => o.Claim_Team_Name, new { @class = "form-control input-sm disabled", @readonly = true })
                                        </div>
                                    </div>
                                </div>
                            </fieldset>
                        </div>


                        <div class="col-md-12">
                            <div class="col-md-6">
                                <fieldset>


                                    <div class="form-group mb">
                                        <label class="col-sm-3 control-label input-sm">Reported Date</label>
                                        <div class="col-sm-9">
                                            <div id="datetimepicker3" class="input-group date dateCalendar" style="width:100%">
                                                @Html.TextBoxFor(o => o.Reported_Date, new { @class = "form-control input-sm" })
                                                <span class="input-group-addon btn btn-info btn-sm btn-outline datebtn" style="padding-bottom: 3.5px;">
                                                    <span class="fa fa-calendar"></span>
                                                </span>
                                            </div>
                                        </div>
                                    </div>

                                    @*<div class="form-group mb">
                                            <label class="col-sm-3 control-label input-sm">Reported Time</label>
                                            <label class="col-sm-1 control-label input-sm text-right">HH</label>
                                            <div class="col-sm-3">
                                                @Html.DropDownListFor(m => m.Reported_TimeH, Enumerable.Range(0, 24).Select(i => new
                                        SelectListItem
                                           { Text = i.ToString().PadLeft(2, '0'), Value = i.ToString().PadLeft(2, '0') }), new { @class = "form-control input-sm" })
                                            </div>
                                            <label class="col-sm-1 control-label input-sm text-center">-</label>
                                            <label class="col-sm-1 control-label input-sm text-right">Min</label>
                                            <div class="col-sm-3">
                                                @Html.DropDownListFor(m => m.Reported_TimeM, Enumerable.Range(0, 60).Select(i => new
                                        SelectListItem
                                           { Text = i.ToString().PadLeft(2, '0'), Value = i.ToString().PadLeft(2, '0') }), new { @class = "form-control input-sm" })
                                            </div>
                                        </div>*@

                                    <div class="form-group mb">
                                        <label class="col-sm-3 control-label input-sm">Reported By</label>
                                        <div class="col-sm-9">
                                            @Html.TextBoxFor(o => o.Reported_By, new { @class = "form-control input-sm" })
                                        </div>
                                    </div>

                                    <div class="form-group mb">
                                        <label class="col-sm-3 control-label input-sm">Client Ref #</label>
                                        <div class="col-sm-9">
                                            @Html.TextBoxFor(o => o.Client_Ref_Num, new { @class = "form-control input-sm valueChanged", @maxlength = 200 })
                                        </div>
                                    </div>
                                </fieldset>

                                <fieldset>
                                    <div class="form-group mb">
                                        <label class="col-sm-3 control-label input-sm">Date of Loss</label>
                                        <div class="col-sm-9">
                                            <div id="datetimepicker1" class="input-group date dateCalendar">
                                                @Html.TextBoxFor(o => o.Date_Of_Loss, new { @class = "form-control input-sm" })
                                                <span class="input-group-addon btn btn-info btn-sm btn-outline datebtn" style="padding-bottom: 3.5px;">
                                                    <span class="fa fa-calendar"></span>
                                                </span>
                                            </div>
                                        </div>
                                    </div>


                                    <div class="col-md-12 col-sm-12 mb">
                                        <label class="col-sm-3 control-label input-sm">Property Address</label>
                                        <div class="col-sm-9" style="padding-right: 0px;">
                                            <div class="form-group">
                                                @Html.TextBoxFor(o => o.Property_Address_1, new { @class = "form-control input-sm", @placeholder = "Address 1" })
                                            </div>
                                            <div class="form-group top-padding">
                                                @Html.TextBoxFor(o => o.Property_Address_2, new { @class = "form-control input-sm", @placeholder = "Address 2" })
                                            </div>
                                            <div class="col-sm-6 top-padding" style="padding-left: 0px">
                                                <div class="form-group">
                                                    @Html.DropDownListFor(model => model.Property_Suburb, new SelectList(Model.PropertySuburbList, "Code", "Text"),
                                            new { @class = "form-control input-sm" })
                                                </div>
                                            </div>
                                            <div class="col-sm-3 top-padding">
                                                <div class="form-group" style="padding-left:5px;padding-right:5px">
                                                    @Html.DropDownListFor(model => model.Property_State,
new List<SelectListItem> { new SelectListItem { Value = "", Text = "" }, new SelectListItem { Value = "NSW", Text = "NSW" }, new SelectListItem { Value = "SA", Text = "SA" }
,new SelectListItem { Value = "TAS", Text = "TAS" },new SelectListItem { Value = "VIC", Text = "VIC" },new SelectListItem { Value = "WA", Text = "WA" },new SelectListItem { Value = "QLD", Text = "QLD" }},
                                            new { @class = "form-control input-sm", @placeholder = "State" })
                                                </div>
                                            </div>
                                            <div class="col-sm-3 top-padding" style="padding-right: 0px">
                                                <div class="form-group">
                                                    @Html.TextBoxFor(o => o.Property_Postalcode, new { @class = "form-control input-sm", @placeholder = "Post Code" })
                                                </div>
                                            </div>
                                        </div>
                                    </div>


                                    <div class="form-group mb">
                                        <label class="col-sm-3 control-label input-sm">GST Registered</label>
                                        <div class="col-sm-9">
                                            @Html.DropDownListFor(model => model.Are_You_Gst_Registered, new SelectList(Model.YesNoList),
                                    new { @class = "form-control input-sm" })
                                        </div>
                                    </div>


                                    <div class="form-group mb">
                                        <label class="col-sm-3 control-label input-sm">ABN #</label>
                                        <div class="col-sm-9">
                                            @Html.TextBoxFor(o => o.Abn_Num, new { @class = "form-control input-sm", @maxlength = 200 })
                                        </div>
                                    </div>

                                    <div class="form-group mb">
                                        <label class="col-sm-3 control-label input-sm">ITC #</label>
                                        <div class="col-sm-9">
                                            @Html.TextBoxFor(o => o.Itc_Pct, new { @class = "form-control input-sm", @maxlength = 32 })
                                        </div>
                                    </div>
                                    <div class="form-group" style="padding-bottom:4px">
                                        <label for="input-id-1" class="col-sm-3 control-label input-sm">OC #</label>
                                        <div class="col-sm-9">
                                            <div class="input-group">
                                                @Html.TextBoxFor(o => o.Oc_Num, new { @class = "form-control input-sm", @maxlength = 200 })
                                                <span class="input-group-btn" data-toggle="modal" data-target="#AccountOcModal">
                                                    <button type="button" class="mb-sm btn btn-info btn-sm btn-outline" style="padding-bottom: 3.5px">
                                                        <i class="fa fa-binoculars"></i>
                                                    </button>
                                                </span>
                                            </div>
                                        </div>
                                    </div>
                                    <div class="form-group mb">
                                        <label class="col-sm-3 control-label input-sm">Loss Details</label>
                                        <div class="col-sm-9">
                                            @Html.TextAreaFor(o => o.Loss_Details, new { @class = "form-control input-sm" })
                                        </div>
                                    </div>
                                    <div class="form-group mb">
                                        <label class="col-sm-3 control-label input-sm">Police Report</label>
                                        <div class="col-sm-9">
                                            @Html.TextBoxFor(o => o.Policy_Report_Num, new { @class = "form-control input-sm", @maxlength = 200 })
                                        </div>
                                    </div>
                                    <div class="form-group mb">
                                        <label class="col-sm-3 control-label input-sm">Details of Responsible 3rd Party</label>
                                        <div class="col-sm-9">
                                            @Html.TextAreaFor(o => o.Details_Of_Responsible_3Rd_Pty, new { @class = "form-control input-sm", @maxlength = 400 })
                                        </div>
                                    </div>

                                    <div class="form-group">
                                        <label class="col-sm-3 control-label input-sm">Phone # Report</label>
                                        <div class="col-sm-9" style="margin-bottom: 5px">
                                            @Html.TextBoxFor(o => o.Reported_By_Contact_Phone_Num, new { @class = "form-control input-sm", @maxlength = 32 })
                                        </div>
                                    </div>

                                    <div class="form-group mb">
                                        <label class="col-sm-3 control-label input-sm">Special Instructions</label>
                                        <div class="col-sm-9">
                                            @Html.TextAreaFor(o => o.Special_Instructions, new { @class = "form-control input-sm valueChanged", @maxlength = 400 })
                                        </div>
                                    </div>

                                    <div class="form-group mb">
                                        <label class="col-sm-3 control-label input-sm">Payment Dtls - Account #</label>
                                        <div class="col-sm-9">
                                            @Html.TextBoxFor(o => o.Payment_Account_Number, new { @class = "form-control input-sm", @maxlength = 32 })
                                        </div>
                                    </div>
                                    <div class="form-group mb">
                                        <label class="col-sm-3 control-label input-sm">BSB</label>
                                        <div class="col-sm-9">
                                            @Html.TextBoxFor(o => o.Payment_Bsb, new { @class = "form-control input-sm", @maxlength = 32 })
                                        </div>
                                    </div>
                                    <div class="form-group mb">
                                        <label class="col-sm-3 control-label input-sm">Acct Name</label>
                                        <div class="col-sm-9">
                                            @Html.TextBoxFor(o => o.Payment_Account_Name, new { @class = "form-control input-sm", @maxlength = 200 })
                                        </div>
                                    </div>
                                </fieldset>
                            </div>
                            <div class="col-md-6">
                                <fieldset>
                                    <div class="form-group mb">
                                        <label class="col-sm-3 control-label input-sm">Received</label>
                                        <div class="col-sm-9">
                                            <div class="input-group">
                                                <span class="input-group-addon">
                                                    @Html.CheckBoxFor(o => o.Claim_Received, new { @id = "chkReceived" })
                                                </span>
                                                <div id="datetimepicker3" class="input-group date dateCalendar" style="width:100%">
                                                    @Html.TextBoxFor(o => o.Claim_Received_Date, new { @id = "txtReceivedDate", @class = "form-control input-sm" })
                                                    <span class="input-group-addon btn btn-info btn-sm btn-outline datebtn" style="padding-bottom: 3.5px;">
                                                        <span class="fa fa-calendar"></span>
                                                    </span>
                                                </div>
                                            </div>
                                        </div>
                                    </div>
                                    <div class="form-group mb">
                                        <label class="col-sm-3 control-label input-sm">Acknowledged</label>
                                        <div class="col-sm-9">
                                            <div class="input-group">
                                                <span class="input-group-addon">
                                                    @Html.CheckBoxFor(o => o.Claim_Acknowledged, new { @id = "chkAcknowledged" })
                                                </span>
                                                <div id="datetimepicker3" class="input-group date dateCalendar" style="width:100%">
                                                    @Html.TextBoxFor(o => o.Claim_Acknowledged_Date, new { @id = "txtAcknowledgedDate", @class = "form-control input-sm" })
                                                    <span class="input-group-addon btn btn-info btn-sm btn-outline datebtn" style="padding-bottom: 3.5px;">
                                                        <span class="fa fa-calendar"></span>
                                                    </span>
                                                </div>
                                            </div>
                                        </div>
                                    </div>
                                    <div class="form-group mb">
                                        <label class="col-sm-3 control-label input-sm">Review</label>
                                        <div class="col-sm-9">
                                            <div class="input-group">
                                                <span class="input-group-addon">
                                                    @Html.CheckBoxFor(o => o.Review, new { @id = "chkReveiew" })
                                                </span>
                                                <div id="datetimepicker3" class="input-group date dateCalendar" style="width:100%">
                                                    @Html.TextBoxFor(o => o.Review_Date, new { @id = "txtReveiwedDate", @class = "form-control input-sm" })
                                                    <span class="input-group-addon btn btn-info btn-sm btn-outline datebtn" style="padding-bottom: 3.5px;">
                                                        <span class="fa fa-calendar"></span>
                                                    </span>
                                                </div>
                                            </div>
                                        </div>
                                    </div>
                                    <div class="form-group mb">
                                        <label class="col-sm-3 control-label input-sm"></label>
                                        <div class="col-sm-9">
                                            <label class="checkbox-inline">
                                                @Html.CheckBoxFor(o => o.Outcome_Settlement, new { @id = "chkOutcomeSettlement" })
                                                <label class="input-sm" style="padding-top: 0px">Outcome Settlement</label>
                                            </label>
                                            <label class="checkbox-inline">
                                                @Html.CheckBoxFor(o => o.Outcome_Declined, new { @id = "chkOutcomeDeclined" })
                                                <label class="input-sm" style="padding-top: 0px">Outcome Declined</label>
                                            </label>

                                        </div>
                                    </div>

                                    <div class="form-group mb">
                                        <label class="col-sm-3 control-label input-sm">Outcome Date</label>
                                        <div class="col-sm-9">
                                            <div id="datetimepicker3" class="input-group date dateCalendar" style="width:100%">
                                                @Html.TextBoxFor(o => o.Outcome_Date, new { @id = "txtOutcomeDate", @class = "form-control input-sm" })
                                                <span class="input-group-addon btn btn-info btn-sm btn-outline datebtn" style="padding-bottom: 3.5px;">
                                                    <span class="fa fa-calendar"></span>
                                                </span>
                                            </div>
                                        </div>
                                    </div>
                                    <div class="form-group mb">
                                        <label class="col-sm-3 control-label input-sm">Outcome</label>
                                        <div class="col-sm-9">
                                            @Html.DropDownListFor(o => o.Outcome, new SelectList(Model.Outcome_List, "Text", "Text"), "", new { @class = "form-control input-sm" })
                                        </div>
                                    </div>
                                    <div class="form-group mb">
                                        <label class="col-sm-3 control-label input-sm">Claim Closed</label>
                                        <div class="col-sm-9">
                                            <div class="input-group">
                                                <span class="input-group-addon">
                                                    @Html.CheckBoxFor(o => o.Claim_Closed, new { @id = "chkClaimClosed" })
                                                </span>
                                                <div id="datetimepicker3" class="input-group date dateCalendar" style="width:100%">
                                                    @Html.TextBoxFor(o => o.Claim_Closed_Date, new { @id = "txtClaimClosedDate", @class = "form-control input-sm" })
                                                    <span class="input-group-addon btn btn-info btn-sm btn-outline datebtn" style="padding-bottom: 3.5px;">
                                                        <span class="fa fa-calendar"></span>
                                                    </span>
                                                </div>
                                            </div>
                                        </div>
                                    </div>
                                    <div class="form-group mb">
                                        <label class="col-sm-3 control-label input-sm">From Notification</label>
                                        <div class="col-sm-9">
                                            <div class="input-group">
                                                <span class="input-group-addon">
                                                    @Html.CheckBoxFor(o => o.Converted_From_Notification, new { @readonly = true, @disabled = "disabled" })
                                                </span>
                                                @Html.TextBoxFor(o => o.Notification_Conversion_Date, new { @class = "form-control input-sm", @readonly = true })
                                            </div>
                                        </div>
                                    </div>
                                </fieldset>
                                <fieldset>
                                    <div id="accordion" role="tablist" aria-multiselectable="true" class="panel-group">
                                        <div class="panel panel-primary">
                                            <div id="headingTwo" role="tab" class="panel-heading">
                                                <h4 class="panel-title">
                                                    <a data-toggle="collapse" data-parent="#accordion" href="#collapseTwo" aria-expanded="True" aria-controls="collapseTwo"> Policy Details</a>
                                                </h4>
                                            </div>
                                            <div id="collapseTwo" role="tabpanel" aria-labelledby="headingTwo" class="panel-collapse collapse in">
                                                <div class="panel-body">
                                                    <div class="col-md-12 col-sm-12">
                                                        <div class="form-group mb">
                                                            <label class="col-sm-3 control-label input-sm">Policy #</label>
                                                            <div class="col-sm-9">
                                                                @*@Html.TextBoxFor(o => o.Policy_No, new { @class = "form-control input-sm disabledControl", @readonly = true })*@

                                                                <div class="input-group">
                                                                    @Html.TextBoxFor(o => o.Policy_No, new { @class = "form-control input-sm", @maxlength = 12 })
                                                                    <span class="input-group-btn" data-toggle="modal" id="policyShow" data-target="#PolicyModal">

                                                                        <button type="button" class="mb-sm btn btn-info btn-sm btn-outline" style="padding-bottom: 3.5px">
                                                                            <i class="fa fa-binoculars"></i>
                                                                        </button>
                                                                    </span>
                                                                </div>

                                                            </div>
                                                        </div>
                                                    </div>

                                                    <div class="col-md-12 col-sm-12">
                                                        <div class="form-group mb">
                                                            <label class="col-sm-3 control-label input-sm">Policy Class</label>
                                                            <div class="col-sm-9">
                                                                @Html.DropDownListFor(model => model.Policy_Class_Selection, new SelectList(Model.Policy_Class_List, "Text", "Text"), new { @class = "form-control input-sm valueChanged Policy_Class_Dropdown" })
                                                                @Html.TextBoxFor(o => o.Policy_Class, new { @class = "form-control input-sm disabledControl Policy_Class_TextBox", @readonly = true })
                                                            </div>
                                                        </div>
                                                    </div>

                                                    <div class="col-md-12 col-sm-12">
                                                        <div class="form-group mb">
                                                            <label class="col-sm-3 control-label input-sm">Policy Status</label>
                                                            <div class="col-sm-9">
                                                                @Html.TextBoxFor(o => o.Policy_Status, new { @class = "form-control input-sm disabledControl", @readonly = true })
                                                            </div>
                                                        </div>
                                                    </div>

                                                    <div class="col-md-12 col-sm-12">
                                                        <div class="form-group mb">
                                                            <label class="col-sm-3 control-label input-sm">Period From</label>
                                                            <div class="col-sm-9">
                                                                @Html.TextBoxFor(o => o.Period_From, new { @class = "form-control input-sm disabledControl", @readonly = true })
                                                            </div>
                                                        </div>
                                                    </div>

                                                    <div class="col-md-12 col-sm-12">
                                                        <div class="form-group mb">
                                                            <label class="col-sm-3 control-label input-sm">Period To</label>
                                                            <div class="col-sm-9">
                                                                @Html.TextBoxFor(o => o.Period_To, new { @class = "form-control input-sm disabledControl", @readonly = true })
                                                            </div>
                                                        </div>
                                                    </div>
                                                    <div class="col-md-12 col-sm-12">
                                                        <div class="form-group mb">
                                                            <label class="col-sm-3 control-label input-sm">Excess</label>
                                                            <div class="col-sm-9">
                                                                @if (!string.IsNullOrEmpty(Model.Excess.ToString()) && Model.Excess != 0)
                                                                {
                                                                    <input class="form-control input-sm disabledControl" disabled="disabled" value="@String.Format("{0:C}", Model.Excess)" />
                                                                }
                                                                else
                                                                {
                                                                    <div class="input-group">
                                                                        <input class="form-control input-sm disabledControl" disabled="disabled" value="@String.Format("{0:C}", Model.Excess)" />
                                                                        <span class="input-group-btn">

                                                                            <button type="button" class="mb-sm btn btn-danger btn-sm btn-outline" style="padding-bottom: 3.5px">
                                                                                <i class="fa fa-flag-o"></i>
                                                                            </button>
                                                                        </span>
                                                                    </div>
                                                                }
                                                                @Html.HiddenFor(o => o.Excess)
                                                            </div>
                                                        </div>
                                                    </div>

                                                    <div class="col-md-12 col-sm-12">
                                                        <div class="form-group mb">
                                                            <label class="col-sm-3 control-label input-sm">Policy Section</label>
                                                            <div class="col-sm-9">
                                                                @Html.DropDownListFor(model => model.Policy_Section, new SelectList(Model.Policy_Section_List, "Text", "Text"),
                        new { @class = "form-control input-sm" })
                                                            </div>
                                                        </div>
                                                    </div>

                                                    <div class="col-md-12 col-sm-12">
                                                        <div class="form-group mb">
                                                            <label class="col-sm-3 control-label input-sm">Client Group</label>
                                                            <div class="col-sm-9">
                                                                @Html.DropDownListFor(model => model.Client_Group, new SelectList(Model.Client_Group_List, "Text", "Text"), new { @class = "form-control input-sm valueChanged" })
                                                            </div>
                                                        </div>
                                                    </div>

                                                    <div class="col-md-12 col-sm-12">
                                                        <div class="form-group mb">
                                                            <label class="col-sm-3 control-label input-sm">Cat Code</label>
                                                            <div class="col-sm-9">
                                                                @Html.TextBoxFor(o => o.Cat_Code, new { @class = "form-control input-sm" })
                                                            </div>
                                                        </div>
                                                    </div>

                                                    <div class="col-md-12 col-sm-12">
                                                        <div class="form-group mb">
                                                            <label class="col-sm-3 control-label input-sm">Causation</label>
                                                            <div class="col-sm-9">
                                                                @Html.DropDownListFor(model => model.Causation, new SelectList(Model.Causation_List, "Text", "Text"),
                        new { @class = "form-control input-sm" })
                                                            </div>
                                                        </div>
                                                    </div>

                                                    <div class="col-md-12 col-sm-12">
                                                        <div class="form-group mb">
                                                            <label class="col-sm-3 control-label input-sm">IDR</label>
                                                            <div class="col-sm-9">
                                                                @Html.DropDownListFor(model => model.Idr, new SelectList(Model.YesNoList), new { @class = "form-control input-sm" })
                                                            </div>
                                                        </div>
                                                    </div>


                                                    <div class="col-md-12 col-sm-12">
                                                        <div class="form-group mb">
                                                            <label class="col-sm-3 control-label input-sm">Insurer</label>
                                                            <div class="col-sm-9">
                                                                <div class="input-group">
                                                                    @Html.TextBoxFor(o => o.Insurer_Name, new { @class = "form-control input-sm", @maxlength = 100 })

                                                                    <span id="insurerModel" class="input-group-btn" data-toggle="modal" data-target="#InsurerModal">
                                                                        <button type="button" class="mb-sm btn btn-info btn-sm btn-outline" style="padding-bottom: 3.5px">
                                                                            <i class="fa fa-binoculars"></i>
                                                                        </button>
                                                                    </span>
                                                                </div>
                                                            </div>
                                                            @Html.HiddenFor(o => o.Insurer)
                                                        </div>
                                                    </div>
                                                    <div class="col-md-12 col-sm-12">
                                                        <div class="form-group mb">
                                                            <label class="col-sm-3 control-label input-sm">Insurer Ref</label>
                                                            <div class="col-sm-9">
                                                                @Html.TextBoxFor(o => o.Insurer_Ref, new { @class = "form-control input-sm" })
                                                            </div>
                                                        </div>
                                                    </div>

                                                    <div class="col-md-12 col-sm-12">
                                                        <div class="form-group mb">
                                                            <label class="col-sm-3 control-label input-sm">Acct Period 1</label>
                                                            <div class="col-sm-9">
                                                                <div class="input-group dateCalendar">
                                                                    @Html.TextBoxFor(o => o.Account_Period_From, new { @class = "form-control input-sm" })
                                                                    <span id="spnReportedDate" class="input-group-addon btn btn-info btn-sm btn-outline datebtn" style="padding-bottom: 3.5px;">
                                                                        <span class="fa fa-calendar"></span>
                                                                    </span>
                                                                </div>
                                                            </div>
                                                        </div>
                                                    </div>
                                                    <div class="col-md-12 col-sm-12">
                                                        <div class="form-group mb">
                                                            <label class="col-sm-3 control-label input-sm">Acct Period 2</label>
                                                            <div class="col-sm-9">
                                                                <div class="input-group dateCalendar">
                                                                    @Html.TextBoxFor(o => o.Account_Period_To, new { @class = "form-control input-sm" })
                                                                    <span id="spnReportedDate" class="input-group-addon btn btn-info btn-sm btn-outline datebtn" style="padding-bottom: 3.5px;">
                                                                        <span class="fa fa-calendar"></span>
                                                                    </span>
                                                                </div>
                                                            </div>
                                                        </div>
                                                    </div>

                                                    <div class="col-md-12 col-sm-12">
                                                        <div class="form-group mb">
                                                            <label class="col-sm-3 control-label input-sm">Insured Name</label>
                                                            <div class="col-sm-9">
                                                                @Html.TextBoxFor(o => o.Insured_Name, new { @class = "form-control input-sm" })
                                                            </div>
                                                        </div>
                                                    </div>

                                                    <div class="col-md-12 col-sm-12">
                                                        <div class="form-group mb">
                                                            <label class="col-sm-3 control-label input-sm">Insured Phone (W)</label>
                                                            <div class="col-sm-9">
                                                                @Html.TextBoxFor(o => o.Insured_Work_Phone, new { @class = "form-control input-sm" })
                                                            </div>
                                                        </div>
                                                    </div>

                                                    <div class="col-md-12 col-sm-12">
                                                        <div class="form-group mb">
                                                            <label class="col-sm-3 control-label input-sm">Insured Phone (M)</label>
                                                            <div class="col-sm-9">
                                                                @Html.TextBoxFor(o => o.Insured_Mobile_Phone, new { @class = "form-control input-sm" })
                                                            </div>
                                                        </div>
                                                    </div>
                                                    <div class="col-md-12 col-sm-12">
                                                        <div class="form-group mb">
                                                            <label class="col-sm-3 control-label input-sm">Insured Email</label>
                                                            <div class="col-sm-9">
                                                                @Html.TextBoxFor(o => o.Insured_Email, new { @class = "form-control input-sm" })
                                                            </div>
                                                        </div>
                                                    </div>
                                                    <div class="col-md-12 col-sm-12">
                                                        <div class="form-group mb">
                                                            <label class="col-sm-3 control-label input-sm">Insured Address</label>
                                                            <div class="col-sm-9">
                                                                @Html.TextAreaFor(o => o.Insured_Address, new { @class = "form-control input-sm" })
                                                            </div>
                                                        </div>
                                                    </div>
                                                    <div class="col-md-12 col-sm-12">
                                                        <div class="form-group mb">
                                                            <label class="col-sm-3 control-label input-sm">Property Claim Ref</label>
                                                            <div class="col-sm-9">
                                                                @Html.TextBoxFor(o => o.Property_Claim_Ref, new { @class = "form-control input-sm" })
                                                            </div>
                                                        </div>
                                                    </div>
                                                    <div class="col-md-12 col-sm-12">
                                                        <div class="form-group mb">
                                                            <label class="col-sm-3 control-label input-sm">Broker Name</label>
                                                            <div class="col-sm-9">
                                                                <div class="input-group">
                                                                    @Html.TextBoxFor(o => o.Broker_Name, new { @class = "form-control input-sm", @maxlength = 100 })
                                                                    <span id="brokerAccountNameModal" class="input-group-btn" data-toggle="modal" data-target="#ContactBrokerModal">
                                                                        <button type="button" class="mb-sm btn btn-info btn-sm btn-outline" style="padding-bottom: 3.5px">
                                                                            <i class="fa fa-binoculars"></i>
                                                                        </button>
                                                                    </span>
                                                                </div>
                                                            </div>
                                                        </div>
                                                    </div>
                                                    <div class="col-md-12 col-sm-12">
                                                        <div class="form-group mb">
                                                            <label class="col-sm-3 control-label input-sm">Broker Account</label>
                                                            <div class="col-sm-9">
                                                                <div class="input-group">
                                                                    @Html.TextBoxFor(o => o.Broker_Account, new { @class = "form-control input-sm", @maxlength = 100 })
                                                                    <span id="brokerAccountNoModal" class="input-group-btn" data-toggle="modal" data-target="#AccountBrokerModal">
                                                                        <button type="button" class="mb-sm btn btn-info btn-sm btn-outline" style="padding-bottom: 3.5px">
                                                                            <i class="fa fa-binoculars"></i>
                                                                        </button>
                                                                    </span>
                                                                </div>
                                                            </div>
                                                        </div>
                                                    </div>

                                                </div>

                                            </div>
                                        </div>
                                    </div>
                                </fieldset>
                                <fieldset>
                                    @if (Model.Claim_Type == "Claim")
                                    {
                                        <div id="accordionFinance" role="tablist" aria-multiselectable="true" class="panel-group">
                                            <div class="panel panel-primary">
                                                <div id="headingThree" role="tab" class="panel-heading">
                                                    <h4 class="panel-title">
                                                        <a data-toggle="collapse" data-parent="#accordionFinance" href="#collapseThree" aria-expanded="True" aria-controls="collapseThree">Financials</a>
                                                    </h4>
                                                </div>
                                                <div id="collapseThree" role="tabpanel" aria-labelledby="headingThree" class="panel-collapse collapse in">

                                                    <div class="panel-body">

                                                        <div class="col-md-12 col-sm-12" style="display:none">
                                                            <div class="form-group mb">
                                                                <label class="col-sm-3 control-label input-sm">Liability Resource $</label>
                                                                <div class="col-sm-9">
                                                                    @Html.TextBoxFor(o => o.Liability_Res_Source, new { @type = "number", @class = "form-control input-sm" })
                                                                </div>
                                                            </div>
                                                        </div>
                                                        <div class="col-md-12 col-sm-12" style="display:none">
                                                            <div class="form-group mb">
                                                                <label class="col-sm-3 control-label input-sm">Defence Ressource $</label>
                                                                <div class="col-sm-9">
                                                                    @Html.TextBoxFor(o => o.Defence_Res_Source, new { @type = "number", @class = "form-control input-sm" })
                                                                </div>
                                                            </div>
                                                        </div>


                                                        <div class="col-md-12 col-sm-12">
                                                            <div class="form-group mb">
                                                                <label class="col-sm-3 control-label input-sm">Liab/Def Res. Source</label>
                                                                <div class="col-sm-9">
                                                                    <span id="ssss" class="input-group-btn btn-outline">
                                                                        <button type="button" class="mb-sm btn btn-info btn-sm btn-outline" style="padding-bottom: 3.5px" data-toggle="modal" data-target="#ExrtaFieldModal">
                                                                            <i class="fa fa-dollar"></i>
                                                                        </button>
                                                                    </span>
                                                                </div>
                                                            </div>
                                                        </div>
                                                        <div class="col-md-12 col-sm-12">
                                                            <div class="form-group mb">
                                                                <label class="col-sm-3 control-label input-sm">Liability Reserve $</label>
                                                                <div class="col-sm-9">
                                                                    <input class="form-control input-sm disabledControl" disabled="disabled" value="@String.Format("{0:C}", Model.Liability_Reserve)" />
                                                                    @Html.HiddenFor(o => o.Liability_Reserve)
                                                                </div>
                                                            </div>
                                                        </div>
                                                        <div class="col-md-12 col-sm-12">
                                                            <div class="form-group mb">
                                                                <label class="col-sm-3 control-label input-sm">Defence Reserve $</label>
                                                                <div class="col-sm-9">
                                                                    <input class="form-control input-sm disabledControl" disabled="disabled" value="@String.Format("{0:C}", Model.Defence_Reserve)" />
                                                                    @Html.HiddenFor(o => o.Defence_Reserve)
                                                                </div>
                                                            </div>
                                                        </div>
                                                        @*Start*@
                                                        <div class="col-md-12 col-sm-12">
                                                            <div class="form-group mb">
                                                                <label class="col-sm-3 control-label input-sm">Total Reserve $</label>
                                                                <div class="col-sm-9">
                                                                    <input class="form-control input-sm disabledControl" disabled="disabled" value="@String.Format("{0:C}", Model.Total_Reserve)" />
                                                                    @Html.HiddenFor(o => o.Total_Reserve)
                                                                </div>
                                                            </div>
                                                        </div>
                                                        <div class="col-md-12 col-sm-12">
                                                            <div class="form-group mb">
                                                                <label class="col-sm-3 control-label input-sm">Net Paid Liability $</label>
                                                                <div class="col-sm-9">
                                                                    <input class="form-control input-sm disabledControl" disabled="disabled" value="@String.Format("{0:C}", Model.Net_Paid_Liability)" />
                                                                    @Html.HiddenFor(o => o.Net_Paid_Liability)
                                                                </div>
                                                            </div>
                                                        </div>
                                                        <div class="col-md-12 col-sm-12">
                                                            <div class="form-group mb">
                                                                <label class="col-sm-3 control-label input-sm">Net Paid Defence $</label>
                                                                <div class="col-sm-9">
                                                                    <input class="form-control input-sm disabledControl" disabled="disabled" value="@String.Format("{0:C}", Model.Net_Paid_Defence)" />
                                                                    @Html.HiddenFor(o => o.Net_Paid_Defence)
                                                                </div>
                                                            </div>
                                                        </div>
                                                        <div class="col-md-12 col-sm-12">
                                                            <div class="form-group mb">
                                                                <label class="col-sm-3 control-label input-sm">Gross Paid to Date $</label>
                                                                <div class="col-sm-9">
                                                                    <input class="form-control input-sm disabledControl" disabled="disabled" value="@String.Format("{0:C}", Model.Gross_Paid_To_Date)" />
                                                                    @Html.HiddenFor(o => o.Gross_Paid_To_Date)
                                                                </div>
                                                            </div>
                                                        </div>
                                                        <div class="col-md-12 col-sm-12">
                                                            <div class="form-group mb">
                                                                <label class="col-sm-3 control-label input-sm">Total Incurred $</label>
                                                                <div class="col-sm-9">
                                                                    <input class="form-control input-sm disabledControl" disabled="disabled" value="@String.Format("{0:C}", Model.Total_Incurred)" />
                                                                    @Html.HiddenFor(o => o.Total_Incurred)
                                                                </div>
                                                            </div>
                                                        </div>
                                                        <div class="col-md-12 col-sm-12">
                                                            <div class="form-group mb">
                                                                <label class="col-sm-3 control-label input-sm">Current Exposure</label>
                                                                <div class="col-sm-9">
                                                                    <input class="form-control input-sm disabledControl" disabled="disabled" value="@String.Format("{0:C}", Model.Current_Exposure)" />
                                                                    @Html.HiddenFor(o => o.Current_Exposure)
                                                                </div>
                                                            </div>
                                                        </div>
                                                    </div>
                                                </div>
                                            </div>
                                        </div>
                                    }
                                    else
                                    {
                                        <div class="col-md-12 text-center">
                                            <input id="btnConvertToClaim" type="button" class="btn btn-info btn-xl" value="Convert To Claim" data-toggle="modal" data-target="#convertToClaimModel" />
                                        </div>
                                    }
                                </fieldset>
                                <fieldset>
                                    <div class="form-group mb">
                                        <label class="col-sm-3 control-label input-sm">Claim Quick Note</label>
                                        <div class="col-sm-9">
                                            @Html.TextAreaFor(o => o.Claim_Note, new { @class = "form-control input-sm", @maxlength = 400 })
                                        </div>
                                    </div>
                                </fieldset>
                            </div>
                        </div>
                        <div class="col-md-12">
                            <fieldset>

                                <div class="col-md-6 col-sm-12">
                                    <label class="col-sm-3 control-label input-sm">Item to Claim 1</label>
                                    <div class="col-sm-9">
                                        <div class="form-group">
                                            @Html.TextBoxFor(o => o.Item_To_Claim_1, new { @class = "form-control input-sm", @maxlength = 200 })

                                        </div>
                                    </div>
                                </div>


                                <div class="col-md-6 col-sm-6">
                                    <div class="col-md-6 top-padding no-right-padding">
                                        <label class="col-sm-5 control-label input-sm">Amount 1</label>
                                        <div class="col-sm-7  no-right-padding">
                                            @Html.TextBoxFor(o => o.Amount_For_Item_1, new { @class = "form-control input-sm", @type = "number" })
                                        </div>
                                    </div>

                                    <div class="col-md-6 top-padding no-right-padding">
                                        <label class="col-sm-5 control-label input-sm">Quote Attached 1</label>
                                        <div class="col-sm-7  no-right-padding">
                                            @Html.DropDownListFor(model => model.Quote_Attached_1, new SelectList(Model.YesNoList),
                                                new { @class = "form-control input-sm" })
                                        </div>
                                    </div>
                                </div>


                                <div class="col-md-6 col-sm-12">
                                    <label class="col-sm-3 control-label input-sm">Item to Claim 2</label>
                                    <div class="col-sm-9">
                                        <div class="form-group">
                                            @Html.TextBoxFor(o => o.Item_To_Claim_2, new { @class = "form-control input-sm", @maxlength = 200 })

                                        </div>
                                    </div>
                                </div>
                                <div class="col-md-6 col-sm-6">
                                    <div class="col-md-6 top-padding no-right-padding">
                                        <label class="col-sm-5 control-label input-sm">Amount 2</label>
                                        <div class="col-sm-7  no-right-padding">
                                            @Html.TextBoxFor(o => o.Amount_For_Item_2, new { @class = "form-control input-sm", @type = "number" })
                                        </div>
                                    </div>

                                    <div class="col-md-6 top-padding no-right-padding">
                                        <label class="col-sm-5 control-label input-sm">Quote Attached 2</label>
                                        <div class="col-sm-7  no-right-padding">
                                            @Html.DropDownListFor(model => model.Quote_Attached_2, new SelectList(Model.YesNoList),
                                            new { @class = "form-control input-sm" })
                                        </div>
                                    </div>
                                </div>

                                <div class="col-md-6 col-sm-12">
                                    <label class="col-sm-3 control-label input-sm">Item to Claim 3</label>
                                    <div class="col-sm-9">
                                        <div class="form-group">
                                            @Html.TextBoxFor(o => o.Item_To_Claim_3, new { @class = "form-control input-sm", @maxlength = 200 })


                                        </div>
                                    </div>
                                </div>
                                <div class="col-md-6 col-sm-12">
                                    <div class="col-md-6 top-padding no-right-padding">
                                        <label class="col-sm-5 control-label input-sm">Amount 3</label>
                                        <div class="col-sm-7  no-right-padding">
                                            @Html.TextBoxFor(o => o.Amount_For_Item_3, new { @class = "form-control input-sm", @type = "number" })
                                        </div>
                                    </div>

                                    <div class="col-md-6 top-padding no-right-padding">
                                        <label class="col-sm-5 control-label input-sm">Quote Attached 3</label>
                                        <div class="col-sm-7  no-right-padding">
                                            @Html.DropDownListFor(model => model.Quote_Attached_3, new SelectList(Model.YesNoList),
                                            new { @class = "form-control input-sm" })
                                        </div>
                                    </div>
                                </div>

                                <div class="col-md-6 col-sm-12">
                                    <label class="col-sm-3 control-label input-sm">Item to Claim 4</label>
                                    <div class="col-sm-9">
                                        <div class="form-group">
                                            @Html.TextBoxFor(o => o.Item_To_Claim_4, new { @class = "form-control input-sm", @maxlength = 200 })

                                        </div>
                                    </div>
                                </div>
                                <div class="col-md-6 col-sm-12">

                                    <div class="col-md-6 top-padding no-right-padding">
                                        <label class="col-sm-5 control-label input-sm">Amount 4</label>
                                        <div class="col-sm-7  no-right-padding">
                                            @Html.TextBoxFor(o => o.Amount_For_Item_4, new { @class = "form-control input-sm", @type = "number" })
                                        </div>
                                    </div>

                                    <div class="col-md-6 top-padding no-right-padding">
                                        <label class="col-sm-5 control-label input-sm">Quote Attached 4</label>
                                        <div class="col-sm-7  no-right-padding">
                                            @Html.DropDownListFor(model => model.Quote_Attached_4, new SelectList(Model.YesNoList),
                                            new { @class = "form-control input-sm" })
                                        </div>
                                    </div>
                                </div>

                                <div class="col-md-6 col-sm-12">
                                    <label class="col-sm-3 control-label input-sm">Item to Claim 5</label>
                                    <div class="col-sm-9">
                                        <div class="form-group">
                                            @Html.TextBoxFor(o => o.Item_To_Claim_5, new { @class = "form-control input-sm", @maxlength = 200 })

                                        </div>
                                    </div>
                                </div>
                                <div class="col-md-6 col-sm-12">
                                    <div class="col-md-6 top-padding no-right-padding">
                                        <label class="col-sm-5 control-label input-sm">Amount 5</label>
                                        <div class="col-sm-7  no-right-padding">
                                            @Html.TextBoxFor(o => o.Amount_For_Item_5, new { @class = "form-control input-sm", @type = "number" })
                                        </div>
                                    </div>

                                    <div class="col-md-6 top-padding no-right-padding">
                                        <label class="col-sm-5 control-label input-sm">Quote Attached 5</label>
                                        <div class="col-sm-7  no-right-padding">
                                            @Html.DropDownListFor(model => model.Quote_Attached_5, new SelectList(Model.YesNoList),
                                            new { @class = "form-control input-sm" })
                                        </div>
                                    </div>
                                </div>

                                <div class="col-md-6 col-sm-12">
                                    <label class="col-sm-3 control-label input-sm">Item to Claim 6</label>
                                    <div class="col-sm-9">
                                        <div class="form-group">
                                            @Html.TextBoxFor(o => o.Item_To_Claim_6, new { @class = "form-control input-sm", @maxlength = 200 })
                                        </div>
                                    </div>
                                </div>
                                <div class="col-md-6 col-sm-12">
                                    <div class="col-md-6 top-padding no-right-padding">
                                        <label class="col-sm-5 control-label input-sm">Amount 6</label>
                                        <div class="col-sm-7  no-right-padding">
                                            @Html.TextBoxFor(o => o.Amount_For_Item_6, new { @class = "form-control input-sm", @type = "number" })
                                        </div>
                                    </div>

                                    <div class="col-md-6 top-padding no-right-padding">
                                        <label class="col-sm-5 control-label input-sm">Quote Attached 6</label>
                                        <div class="col-sm-7  no-right-padding">
                                            @Html.DropDownListFor(model => model.Quote_Attached_6, new SelectList(Model.YesNoList),
                                            new { @class = "form-control input-sm" })
                                        </div>
                                    </div>
                                </div>

                            </fieldset>
                        </div>
                        <div class="col-md-12">
                            <div class="col-md-6">
                                <fieldset>
                                    <div id="accordionIncident" role="tablist" aria-multiselectable="true" class="panel-group">
                                        <div class="panel panel-primary">
                                            <div id="headingFour" role="tab" class="panel-heading">
                                                <h4 class="panel-title">
                                                    <a data-toggle="collapse" data-parent="#accordionIncident" href="#collapseFour" aria-expanded="True" aria-controls="collapseFour">Incident Details</a>
                                                </h4>
                                            </div>
                                            <div id="collapseFour" role="tabpanel" aria-labelledby="headingFour" class="panel-collapse collapse in">
                                                <div class="panel-body">
                                                    <div class="form-group mb">
                                                        <label class="col-sm-3 control-label input-sm">Incident Date</label>
                                                        <div class="col-sm-9">
                                                            <div id="datetimepicker1" class="input-group date dateCalendar">
                                                                @Html.TextBoxFor(o => o.Incident_Date, new { @class = "form-control input-sm" })
                                                                <span class="input-group-addon btn btn-info btn-sm btn-outline datebtn" style="padding-bottom: 3.5px;">
                                                                    <span class="fa fa-calendar"></span>
                                                                </span>
                                                            </div>
                                                        </div>
                                                    </div>
                                                    <div class="form-group mb">
                                                        <label class="col-sm-3 control-label input-sm">Incident Time</label>
                                                        <label class="col-sm-1 control-label input-sm text-right">HH</label>
                                                        <div class="col-sm-3">
                                                            @Html.DropDownListFor(m => m.Incident_TimeH, Enumerable.Range(0, 24).Select(i => new
                                    SelectListItem
                                                   { Text = i.ToString().PadLeft(2, '0'), Value = i.ToString().PadLeft(2, '0') }), new { @class = "form-control input-sm" })
                                                        </div>
                                                        <label class="col-sm-1 control-label input-sm text-center">-</label>
                                                        <label class="col-sm-1 control-label input-sm text-right">Min</label>
                                                        <div class="col-sm-3">
                                                            @Html.DropDownListFor(m => m.Incident_TimeM, Enumerable.Range(0, 60).Select(i => new
                                    SelectListItem
                                                   { Text = i.ToString().PadLeft(2, '0'), Value = i.ToString().PadLeft(2, '0') }), new { @class = "form-control input-sm" })
                                                        </div>

                                                    </div>
                                                    <div class="form-group mb">
                                                        <label class="col-sm-3 control-label input-sm">Incident Category</label>
                                                        <div class="col-sm-9">
                                                            @Html.DropDownListFor(model => model.Incident_Category, new SelectList(Model.IncidentCategoryList, "Text", "Text"),
                                        new { @class = "form-control input-sm", @multiple = "multiple", @name = "Incident_Category", @style = "width:100%" })
                                                        </div>
                                                    </div>

                                                    <div class="form-group mb">
                                                        <label class="col-sm-3 control-label input-sm">Incident Type</label>
                                                        <div class="col-sm-9">
                                                            @Html.DropDownListFor(o => o.Incident_Type, new SelectList(Model.IncidentTypeList, "Text", "Text"), "", new { @class = "form-control input-sm" })

                                                        </div>
                                                    </div>

                                                    <div class="form-group mb">
                                                        <label class="col-sm-3 control-label input-sm">Claimant Firstname</label>
                                                        <div class="col-sm-9">
                                                            @Html.TextBoxFor(o => o.Claimant_First_Name, new { @class = "form-control input-sm valueChanged", @maxlength = 200 })
                                                        </div>
                                                    </div>
                                                    <div class="form-group mb">
                                                        <label class="col-sm-3 control-label input-sm">Claimant Lastname</label>
                                                        <div class="col-sm-9">
                                                            @Html.TextBoxFor(o => o.Claimant_Last_Name, new { @class = "form-control input-sm valueChanged", @maxlength = 200 })
                                                        </div>
                                                    </div>
                                                    <div class="form-group mb">
                                                        <label class="col-sm-3 control-label input-sm">Claimant Phone (W)</label>
                                                        <div class="col-sm-9">
                                                            @Html.TextBoxFor(o => o.Claimant_Work_Phone, new { @class = "form-control input-sm valueChanged", @maxlength = 200 })
                                                        </div>
                                                    </div>
                                                    <div class="form-group mb">
                                                        <label class="col-sm-3 control-label input-sm">Claimant Phone (H)</label>
                                                        <div class="col-sm-9">

                                                            @Html.TextBoxFor(o => o.Claimant_Home_Phone, new { @class = "form-control input-sm valueChanged", @maxlength = 200 })
                                                        </div>
                                                    </div>
                                                    <div class="form-group mb">
                                                        <label class="col-sm-3 control-label input-sm">Claimant Phone (M)</label>
                                                        <div class="col-sm-9">
                                                            @Html.TextBoxFor(o => o.Claimant_Mobile_Phone, new { @class = "form-control input-sm valueChanged", @maxlength = 200 })
                                                        </div>
                                                    </div>
                                                    <div class="form-group mb">
                                                        <label class="col-sm-3 control-label input-sm">Email Address</label>
                                                        <div class="col-sm-9">
                                                            <div class="input-group">
                                                                @Html.TextBoxFor(o => o.Email_Address, new { @class = "form-control input-sm valueChanged", @maxlength = 200 })
                                                                <a id="aEmailClaimant" class="input-group-addon btn btn-info btn-sm btn-outline datebtn" style="padding-bottom: 3.5px;">
                                                                    <span class="fa fa-envelope"></span>
                                                                </a>
                                                            </div>
                                                        </div>
                                                    </div>
                                                    <div class="form-group mb">
                                                        <label class="col-sm-3 control-label input-sm">Incident Summary</label>
                                                        <div class="col-sm-9" disabled="true">

                                                            @Html.TextAreaFor(o => o.Incident_Summary, new { @class = "form-control input-sm valueChanged", @maxlength = 400 })

                                                        </div>
                                                    </div>
                                                    <div class="form-group mb">
                                                        <label class="col-sm-3 control-label input-sm">Injury Summary</label>
                                                        <div class="col-sm-9">
                                                            @Html.TextAreaFor(o => o.Injury_Summary, new { @class = "form-control input-sm valueChanged", @maxlength = 400 })
                                                        </div>
                                                    </div>
                                                    <div class="form-group mb">
                                                        <label class="col-sm-3 control-label input-sm">Bodily Location</label>
                                                        <div class="col-sm-9">
                                                            @Html.TextBoxFor(o => o.Bodily_Location, new { @class = "form-control input-sm valueChanged", @maxlength = 200 })
                                                        </div>
                                                    </div>
                                                </div>
                                            </div>
                                        </div>
                                    </div>

                                </fieldset>
                            </div>
                        </div>
                    </div>
                </div>
                <div class="panel-footer text-right">
                    <button type="button" onclick="Cancel()" class="mb-sm btn btn-default">Cancel</button>
                    <button type="submit" class="mb-sm btn btn-primary">Save</button>
                </div>

            </div>
        }
    </div>


    @if (Model.Claim_Type == HonanClaimsPortal.Helpers.ClaimType.Claim.ToString())
    {
        <div class="tab-pane" id="tabActivityTasks">
            @{Html.RenderAction("_ActivityTasks", "ClaimDetailTabs", new { claimId = Model.H_Claimsid });}
        </div>
                }
    <div class="tab-pane" id="tabKey_Contacts_Dates">
        @{Html.RenderAction("_KeyContactsDates", "ClaimDetailTabs", new { claimId = Model.H_Claimsid, claimRefNo = Model.Claim_Reference_Num });}
    </div>
    <div class="tab-pane" id="tabAttachments">
        @Html.Partial("~/Views/Shared/_Attachments.cshtml", null)
    </div>
    <div class="tab-pane" id="tabCustomerDocs">
        @Html.Partial("~/Views/Shared/_CustomerDocs.cshtml", null)
    </div>
    <div class="tab-pane" id="tabBillings">
        @{Html.RenderAction("_Billing", "ClaimDetailTabs", new { claimId = Model.H_Claimsid });}
    </div>
    <div class="tab-pane" id="tabPayments">
        @Html.Partial("~/Views/Shared/_Payments.cshtml", new ViewDataDictionary { { "claimId", Model.H_Claimsid }, { "Claim_Reference_Num", Model.Claim_Reference_Num } })
    </div>
    <div class="tab-pane" id="tabFileNotes">
        @Html.Partial("~/Views/Shared/_FileNotes.cshtml", new ViewDataDictionary { { "claimId", Model.H_Claimsid }, { "Claim_Reference_Num", Model.Claim_Reference_Num } })
    </div>
</div>
<!-- Modal -->
<div id="AccountModal" class="modal fade AccountModal" role="dialog" data-backdrop="false" style="padding-top: 10%;">
    <div class="modal-dialog">
        <div class="modal-content">
            <div class="modal-header">
                <button type="button" class="close" data-dismiss="modal">&times;</button>
                <h4 class="modal-title">Account Lookup</h4>
            </div>
            <div class="modal-body">
                @Html.Partial("~/Views/Shared/_AccountLookup.cshtml", null) @*, new ViewDataDictionary { { "Policy_No", Model.Policy_No } }*@
            </div>
            <div class="modal-footer">
                <button type="button" class="btn btn-default" data-dismiss="modal">Close</button>
            </div>
        </div>
    </div>
</div>

<!-- Modal -->
<div id="StoresModal" class="modal fade StoresModal" role="dialog" data-backdrop="false" style="padding-top: 10%;">
    <div class="modal-dialog">

        <!-- Modal content-->
        <div class="modal-content">
            <div class="modal-header">
                <button type="button" class="close" data-dismiss="modal">&times;</button>
                <h4 class="modal-title">Store Lookup</h4>
            </div>
            <div class="modal-body">
                @Html.Partial("~/Views/Shared/_StoreLookup.cshtml", null, new ViewDataDictionary { { "Accountid", Model.Accountid } })
            </div>
            <div class="modal-footer">
                <button type="button" class="btn btn-default" data-dismiss="modal">Close</button>
            </div>
        </div>

    </div>
</div>

<!-- Modal -->
<div id="PolicyModal" class="modal fade PolicyModal" role="dialog" data-backdrop="false" style="padding-top: 10%;">
    <div class="modal-dialog">

        <!-- Modal content-->
        <div class="modal-content">
            <div class="modal-header">
                <button type="button" class="close" data-dismiss="modal">&times;</button>
                <h4 class="modal-title">Policy Lookup</h4>
            </div>
            <div class="modal-body">
                @Html.Partial("~/Views/Shared/_PolicyLookup.cshtml", null, new ViewDataDictionary { { "PageId", "Detail" } })
            </div>
            <div class="modal-footer">
                <button type="button" class="btn btn-default" data-dismiss="modal">Close</button>
            </div>
        </div>

    </div>
</div>

<!-- Modal -->
<div id="AccountOcModal" class="modal fade AccountOcModal" role="dialog" data-backdrop="false" style="padding-top: 10%;">
    <div class="modal-dialog">
        <div class="modal-content">
            <div class="modal-header">
                <button type="button" class="close" data-dismiss="modal">&times;</button>
                <h4 class="modal-title">OC# Lookup</h4>
            </div>
            <div class="modal-body">
                @Html.Partial("~/Views/Shared/_AccountOcLookup.cshtml")
            </div>
            <div class="modal-footer">
                <button type="button" class="btn btn-default" data-dismiss="modal">Close</button>
            </div>
        </div>

    </div>
</div>

<!-- Modal -->
<div id="InsurerModal" class="modal fade InsurerModal" role="dialog" data-backdrop="false" style="padding-top: 10%;">
    <div class="modal-dialog">
        <div class="modal-content">
            <div class="modal-header">
                <button type="button" class="close" data-dismiss="modal">&times;</button>
                <h4 class="modal-title">Insurer Lookup</h4>
            </div>
            <div class="modal-body">
                @Html.Partial("~/Views/Shared/_InsurerLookUp.cshtml", null) @*, new ViewDataDictionary { { "AccountId", (Session[HonanCCp.CustomHelpers.SessionHelper.LoginClient] as LoginClient).AccountId } })*@
            </div>
            <div class="modal-footer">
                <button type="button" class="btn btn-default" data-dismiss="modal">Close</button>
            </div>
        </div>

    </div>
</div>

<!-- Modal -->
<div id="AccountBrokerModal" class="modal fade AccountBrokerModal" role="dialog" data-backdrop="false" style="padding-top: 10%;">
    <div class="modal-dialog">
        <div class="modal-content">
            <div class="modal-header">
                <button type="button" class="close" data-dismiss="modal">&times;</button>
                <h4 class="modal-title">Account Broker Lookup</h4>
            </div>
            <div class="modal-body">
                @Html.Partial("~/Views/Shared/_AccountBrokerLookup.cshtml", null) @*, new ViewDataDictionary { { "Policy_No", Model.Policy_No } }*@
            </div>
            <div class="modal-footer">
                <button type="button" class="btn btn-default" data-dismiss="modal">Close</button>
            </div>
        </div>
    </div>
</div>

<!-- Modal -->
<div id="ContactBrokerModal" class="modal fade ContactBrokerModal" role="dialog" data-backdrop="false" style="padding-top: 10%;">
    <div class="modal-dialog">
        <div class="modal-content">
            <div class="modal-header">
                <button type="button" class="close" data-dismiss="modal">&times;</button>
                <h4 class="modal-title">Broker Name Lookup</h4>
            </div>
            <div class="modal-body">
                @Html.Partial("~/Views/Shared/_ContactBrokerLookup.cshtml", null) @*, new ViewDataDictionary { { "Policy_No", Model.Policy_No } }*@
            </div>
            <div class="modal-footer">
                <button type="button" class="btn btn-default" data-dismiss="modal">Close</button>
            </div>
        </div>
    </div>
</div>

<!-- Modal -->
<div id="ExrtaFieldModal" class="modal fade ExrtaFieldModal" role="dialog" data-backdrop="false" style="padding-top: 10%;">
    <div class="modal-dialog">
        <div class="modal-content">
            @*<div class="modal-header">
                    <button type="button" class="close" data-dismiss="modal">&times;</button>
                </div>*@
            <div class="modal-body">

                <div class="col-md-12 col-sm-12">
                    <div class="form-group mb">
                        <label class="col-sm-4 control-label input-sm">Liability Res. Source $</label>
                        <div class="col-sm-8">
                            <input type="number" id="txtLiabilityResSource" value="@Model.Liability_Res_Source" class="form-control input-sm" />
                        </div>
                    </div>
                </div>

                <div class="col-md-12 col-sm-12">
                    <div class="form-group mb">
                        <label class="col-sm-4 control-label input-sm">Defence Res. Source $</label>
                        <div class="col-sm-8">
                            <input type="number" id="txtDefecnceResSource" value="@Model.Defence_Res_Source" class="form-control input-sm" />
                        </div>
                    </div>
                </div>
            </div>
            <div class="modal-footer">
                <button type="button" class="btn btn-default" onclick="SetExtraFields()">Ok</button>
            </div>
        </div>
    </div>
</div>


<!-- Covert to Claim Modal -->
<div id="convertToClaimModel" class="modal fade convertToClaimModel" role="dialog" data-backdrop="false" style="padding-top: 10%;">
    <div class="modal-dialog">
        <div class="modal-content">
            <div class="modal-header">
                <button type="button" class="close" data-dismiss="modal">&times;</button>
                <h4 class="modal-title">Convert To Claim</h4>
            </div>
            <div class="modal-body">
                @Html.Partial("~/Views/Shared/_ConvertToClaimLookup.cshtml", null, new ViewDataDictionary { { "Accountid", Model.Accountid }, { "TeamName", "Risksmart GCC Team" }, { "ClaimId", Model.H_Claimsid } })
            </div>
            @*<div class="modal-footer">
                    <button type="button" class="btn btn-default" data-dismiss="modal">Close</button>
                </div>*@
        </div>
    </div>
</div>



<script>
    $('#convertToClaimModel').on('show.bs.modal', function () {
        $('#Policy_No_CC').val(@Model.Policy_No)
        $('#ActivityTemplate').val("@Model.Claim_Team_Name")
    });
</script>

<!-- Covert to Claim Modal End-->
<!-- SELECT2-->
<script src="~/Content/vendor/select2/dist/js/select2.js"></script>

<!-- Loading gif-->
<script src="~/Scripts/loadingoverlay.min.js"></script>
<script src="~/Scripts/loadingoverlay_progress.min.js"></script>


<script>

    $(document).ready(function () {

       @{
            var saved = TempData["ClaimSaved"] != null ? TempData["ClaimSaved"].ToString() : "";
         }

        if ("@saved" != "")
        {
            bootbox.alert({
                message: "@saved",
                size: 'small'
            });
        }

        $('#Property_Suburb').select2({ width: '100%' });

        if ($("#Property_Suburb").length > 0) {
            $("#Property_Suburb").val($("#Property_Suburb").val()).trigger('change.select2');;
        }

        $('#formRisksmartDetailPropertyClaim').submit(function () {
            if ($(this).valid()) {
                $.LoadingOverlay("show");
            }
        });

        jQuery.validator.methods["date"] = function (value, element) { return true; }

        $("#storeShow").click(function () {

            $('#tbStore').DataTable().ajax.reload(null, false);
        });

        $("#policyShow").click(function () {

            $('#tbPolicy').DataTable().ajax.reload(null, false);
        });

        $("#brokerAccountNameModal").click(function () {
            $('#tbContactBroker').DataTable().ajax.reload(null, false);
        })


        $("#ddlStatus").change(function () {

            if ($(this).val() == "Closed" && $("#BillingMethod").val() == "Per Claim") {
                bootbox.alert("This customer is billed Per Claim when claims are closed. Please ensure that all claims data is up to date before closing this Claim");
            }
        });


        $("#btnShowExtra").click(function () {

        });


        $('#chkReceived').click(function (event) {
            if ($('#chkReceived').is(':checked')) {

                $('#txtReceivedDate').val(getTodaysDate());
            } else {
                $('#txtReceivedDate').val('');
            }
        });

        $('#chkAcknowledged').click(function (event) {
            if ($('#chkAcknowledged').is(':checked')) {

                $('#txtAcknowledgedDate').val(getTodaysDate());
            } else {
                $('#txtAcknowledgedDate').val('');
            }
        });

        $('#chkReveiew').click(function (event) {
            if ($('#chkReveiew').is(':checked')) {

                $('#txtReveiwedDate').val(getTodaysDate());
            } else {
                $('#txtReveiwedDate').val('');
            }
        });

        $('#chkClaimClosed').click(function (event) {
            if ($('#chkClaimClosed').is(':checked')) {
                $('#txtClaimClosedDate').val(getTodaysDate());
                $('#ddlStatus').val("Closed");

            } else {
                $('#txtClaimClosedDate').val('');
            }
        });

        $('#chkOutcomeSettlement').click(function (event) {
            if ($('#chkOutcomeSettlement').is(':checked')) {
                $('#chkOutcomeDeclined').prop('checked', false);
                $('#txtOutcomeDate').val(getTodaysDate());
            }
        });

        $('#chkOutcomeDeclined').click(function (event) {
            if ($('#chkOutcomeDeclined').is(':checked')) {
                $('#chkOutcomeSettlement').prop('checked', false);
                $('#txtOutcomeDate').val(getTodaysDate());
            }
        });

        function getTodaysDate() {
            var d = new Date();

            var month = d.getMonth() + 1;
            var day = d.getDate();

            return (('' + day).length < 2 ? '0' : '') + day + '/' +
                (('' + month).length < 2 ? '0' : '') + month + '/' +
                d.getFullYear();
        }

         var policyClass = "@Model.Policy_Class";
        if (policyClass == "") {
            $(".Policy_Class_Dropdown").show();
            $(".Policy_Class_TextBox").hide();
        }
        else {
            $(".Policy_Class_TextBox").show();
            $(".Policy_Class_Dropdown").hide();
        }

        $('#aEmailClaimant').click(function () {
            this.href = "mailto:" + $('#Email_Address').val();
        });


        $("#btnSave").click(function () {

            if ($('#Region :selected').text() == "") {
                $('.select2-selection.select2-selection--single').addClass("alertError");
            }
            else
                $('.select2-selection.select2-selection--single').removeClass("alertError");

            if ($('#Incident_Category :selected').text() == "") {

                $('.select2-selection.select2-selection--multiple').addClass("alertError");
            }
            else
                $('.select2-selection.select2-selection--multiple').removeClass("alertError");

        });


        var re = /[0-9]+$/;
        $('#Incident_Category').select2({
            theme: "bootstrap",
            placeholder: "",
            tags: true
        });

        var values = "@Model.Incident_Category"; //pull ItemIds from Model in MVC
        $.each(values.split(","), function (i, e) {
            if (i == 0)
                e = " " + e;
            if (e != "Not Set" && e != "" && e != null && e != undefined) {
                if (!re.test(e)) {
                    var newList = $.merge($('#Incident_Category').select2('data'), [{
                        id: e,
                        tag: e
                    }]);
                    $("#Incident_Category").select2('data', newList);
                    $("#Incident_Category").append('<option value="' + e + '">' + e + '</option>');
                }
                else {
                    $("#Incident_Category").append($("#Incident_Category option[value='" + e + "']"));
                }
                $("#Incident_Category option[value='" + e + "']").prop("selected", true);
            }
        });

        var policyClass = "@Model.Policy_Class";
        if (policyClass == "") {
            $("#Policy_Class_Dropdown").show();
            $("#Policy_Class_TextBox").hide();
        }
        else {
            $("#Policy_Class_TextBox").show();
            $("#Policy_Class_Dropdown").hide();
        }


        $('.form-control').change(function () {
            $.ajax({
                type: "POST",
                url: "/RisksmartGccClaim/HistoryAjaxHandler",
                data: '{claimId: "' + "@Model.H_Claimsid" + '",fieldName:"' + this.id + '",newValue:"' + this.value + '" }',
                contentType: "application/json; charset=utf-8",
                dataType: "json",
                success: function (response) {
                },
                failure: function (response) {
                    alert("Error writing to history");
                },
                error: function (response) {
                    alert("Error writing to history");
                }
            });
        });

        $('input:checkbox').click(function () {
            $.ajax({
                type: "POST",
                url: "/RisksmartGccClaim/HistoryAjaxHandler",
                data: '{claimId: "' + "@Model.H_Claimsid" + '",fieldName:"' + this.id + '",newValue:"' + this.value + '" }',
                contentType: "application/json; charset=utf-8",
                dataType: "json",
                success: function (response) {
                },
                failure: function (response) {
                    alert("Error writing to history");
                },
                error: function (response) {
                    alert("Error writing to history");
                }
            });
        });

        $("#Assigned_User").change(function () {
            $('#Assigned_Date').val(getTodaysDate());
        });

        // Warning
        $(window).on('beforeunload', function () {
            if (fieldsUpdated) {
                return "Any changes will be lost";
            }
        });

        $('.form-control').change(function () {
            fieldsUpdated = true;
        });

        $('.datebtn').click(function () {
            fieldsUpdated = true;
        });

        // Form Submit
        $(document).on("submit", "form", function (event) {
            // disable unload warning
            $(window).off('beforeunload');
        });
    })

    function SetExtraFields() {
        $("#Liability_Res_Source").val($("#txtLiabilityResSource").val());
        $("#Defence_Res_Source").val($("#txtDefecnceResSource").val());
        $('#ExrtaFieldModal').modal('toggle');
    }

     var message = '@message';
    if (message) {
        $.notify(message, "danger");
     }

    function Cancel() {

        $(window).off('beforeunload');
        window.location.href = '/ClaimList/Index';
    }

    window.onload = function () {
          @{
              bool showBanner = false;
              if (string.IsNullOrEmpty(Model.Policy_No))
              {
                  showBanner = true;
              }
              else if(string.IsNullOrEmpty(Model.Period_From) && string.IsNullOrEmpty(Model.Period_To))
              {
                  showBanner = true;
              }
              else if(Model.Incident_Date != null && !(Model.Incident_Date >= DateTime.Parse(Model.Period_From) && Model.Incident_Date <= DateTime.Parse(Model.Period_To)))
              {
                  showBanner = true;
              }
              else if(Model.Policy_Status != "Active")
              {
                  showBanner = true;
              }
              else if (string.IsNullOrEmpty(Model.Insurer_Name))
              {
                  showBanner = true;
              }
              else if (Model.Excess == 0)
              {
                  showBanner = true;
              }

              if(Model.Claim_Status == "Closed" || Model.Claim_Type == HonanClaimsPortal.Helpers.ClaimType.Notification.ToString())
              {
                  showBanner = false;
              }

        }
        if ("@showBanner" == "True") {

            $.ajax({
                type: "POST",
                url: "/ClaimGeneral/AjaxDoNotShowBanner",
                data: '{claimId: "' + "@Model.H_Claimsid" + '" }',
                contentType: "application/json; charset=utf-8",
                dataType: "json",
                success: function (response) {
                    if (response == false) {
                        var dialog = bootbox.dialog({
                            title: '<p class="text-center text-danger">Warning !!!</p>',
                            message: "<p>There is one or more potential problems with the data in this claim. Please review the list below </p><br>" +
                            "<p># Missing or Wrong Policy #</p> <p># Policy Period conflicts with this claim</p> <p># The Policy Status does not appear to be active</p>" +
                            " <p># The Insurer is missing</p>",
                            buttons: {
                                cancel: {
                                    label: "Hide & Never Show On This Claim",
                                    className: 'btn-info',
                                    callback: function () {
                                        $.ajax({
                                            type: "POST",
                                            url: "/ClaimGeneral/AjaxHideBanner",
                                            data: '{claimId: "' + "@Model.H_Claimsid" + '" }',
                                            contentType: "application/json; charset=utf-8",
                                            dataType: "json",
                                            success: function (response) {
                                            },
                                            failure: function (response) {
                                                bootbox.alert("Error Updating Notification Status");
                                            },
                                            error: function (response) {
                                                bootbox.alert("Error Updating Notification Status");
                                            }
                                        });
                                    }
                                },
                                ok: {
                                    label: "Hide",
                                    className: 'btn-primary',
                                    callback: function () {
                                    }
                                }
                            }
                        });

                        dialog.show();
                    }

                },
                failure: function (response) {
                    bootbox.alert("Error Updating Notification Status");
                },
                error: function (response) {
                    bootbox.alert("Error Updating Notification Status");
                }
            });
        }
    }

</script>