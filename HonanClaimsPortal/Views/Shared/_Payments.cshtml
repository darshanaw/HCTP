
<style>
    .PaymentDetail_ {
        max-height: 90vh;
    }
</style>

@{

    HonanClaimsWebApi.Services.PicklistServicecs pickListServices = new HonanClaimsWebApi.Services.PicklistServicecs();
    HonanClaimsWebApi.Services.DocumentService docservice = new HonanClaimsWebApi.Services.DocumentService();


    var Payment_Status_List_Filter = pickListServices.GetPickListItems("Honan Payment Status");
}

<script>

    $(function () {

        $('#selPayeePayment').find('option').remove().end();
        var newOption_ = $('<option value=""></option>');
        $('#selPayeePayment').append(newOption_);

        $.ajax({
            url: "/ClaimDetailTabs/AjaxPickListPayeesLoad?claimId=" + $("#H_Claimsid").val(), success: function (result) {

                for (var i = 0; i < result.length; i++) {

                    var newOption = $('<option value="' + result[i].Text + '">' + result[i].Text + '</option>');
                    $('#selPayeePayment').append(newOption);

                }
            }
        });

    });

</script>

<div class="panel panel-default">

    <div class="panel-body">
        <div class="col-md-6">


            <div class="col-md-12 col-sm-12">
                <div class="form-group mb">
                    <label class="col-sm-5 control-label input-sm">Deductible</label>
                    <div class="col-sm-7">
                        <input class="form-control input-sm disabledControl" id="Deductible_Filter" disabled="disabled" />
                    </div>
                </div>
            </div>

            <div class="col-md-12 col-sm-12">
                <div class="form-group mb">
                    <label class="col-sm-5 control-label input-sm">Net Incurred On Deductible</label>
                    <div class="col-sm-7">
                        @Html.TextBox("Net_Incurred_On_Deductible", "", new { @class = "form-control input-sm disabled", @readonly = true, @id = "Net_Incurred_On_Deductible" })
                    </div>
                </div>
            </div>

            <div class="col-md-12 col-sm-12">
                <div class="form-group mb">
                    <label class="col-sm-5 control-label input-sm">Balance On Deductible Remaining</label>
                    <div class="col-sm-7">
                      @Html.TextBox("Balance_On_Deductible_Remaining", "", new { @class = "form-control input-sm disabled", @readonly = true, @id = "Balance_On_Deductible_Remaining" })
                    </div>
                </div>
            </div>
        </div>

        <div class="col-md-6">
            <div class="col-md-12 col-sm-12">
                <div class="form-group mb">
                    <label class="col-sm-5 control-label input-sm">Payee</label>
                    <div class="col-sm-7">
                        <select id="selPayeePayment" class="form-control input-sm"></select>
                    </div>
                </div>
            </div>

            <div class="col-md-12 col-sm-12">
                <div class="form-group mb">
                    <label class="col-sm-5 control-label input-sm">Date Received</label>
                    <div class="col-sm-7">
                        <div class="input-group date dateCalendar" style="width:100%;z-index:auto">
                            @Html.TextBox("Date_Invoice_Paid_Filter", "", new { @class = "form-control input-sm",@style= "z-index:auto" })
                            <span class="input-group-addon btn btn-info btn-sm btn-outline datebtn" style="padding-bottom: 3.5px;">
                                <span class="fa fa-calendar"></span>
                            </span>
                        </div>
                    </div>
                </div>
            </div>

            <div class="col-md-12 col-sm-12">
                <div class="form-group mb">
                    <label class="col-sm-5 control-label input-sm">Status</label>
                    <div class="col-sm-7">
                        @Html.DropDownList("PaymentStatus", new SelectList(Payment_Status_List_Filter, "Text", "Text"), "",
                                    new { @class = "form-control input-sm", @id = "FilterPaymentStatus" })
                    </div>
                </div>
            </div>

            <div class="col-md-12 col-sm-12">
                <div class="form-group mb">
                    <label class="col-sm-5 control-label input-sm">Invoice #</label>
                    <div class="col-sm-7">
                        @Html.TextBox("Invoice_No_Filter", "", new { @class = "form-control input-sm", @id = "Invoice_No_Filter" })
                    </div>
                </div>
            </div>
            <div class="col-md-12 col-sm-12">
                <div class="form-group mb">
                    <div class="col-md-12">
                        <div class="pull-right">
                            <input type="button" class="btn btn-default" id="ClearFilters_Payment" value="Clear" />
                            <input type="button" class="btn btn-primary" id="FilterBillables_Payment" value="Filter List" />
                            <input type="button" value="New Payment" id="btnNewPayment" class="btn btn-primary" data-toggle="modal" data-target="#PaymentDetailModal" />
                        </div>
                    </div>
                </div>
            </div>
        </div>

      




        <div class="col-md-12" style="padding-left:0px">
            <div class="col-md-12" style="padding-left:0px">
                <div class="col-md-12">
                  

                </div>

                <div class="col-md-12">

                    <div class="col-md-3">

                    </div>

                    <div class="col-md-3">

                    </div>

                    <div class="col-md-3">

                    </div>

                    <div class="col-md-3">
                        <div class="form-group mb">
                           
                        </div>
                    </div>

                    <div class="col-md-3">

                    </div>
                </div>

                <div class="col-md-12">

                    <div class="col-md-2">

                    </div>

                    <div class="col-md-10">

                    </div>
                </div>

            </div>
        </div>
        <br /><br /><br />

    </div>

</div>

<div id="gridPaymentDetails"></div>

<!-- Modal -->
<div id="PaymentDetailModal" class="modal fade PaymentDetailModal" role="dialog" data-backdrop="true">
    <div class="modal-dialog  modal-lg">
        <div class="modal-content">
            <div class="modal-header">
                <button type="button" class="close" data-dismiss="modal">&times;</button>
                <h4 class="modal-title">Payment Detail</h4>
            </div>
            <div class="modal-body PaymentDetail_">
                @{Html.RenderAction("_PaymentDetail", "ClaimDetailTabs", new { claimId = this.ViewData["claimId"], Claim_Reference_Num = this.ViewData["Claim_Reference_Num"] });}

            </div>

        </div>
    </div>
</div>

<script>

    function onPaymentDataBound(arg) {

        //Total sum of UnitsInStock field
        var datalength = arg.sender.dataSource.data().length;
        var totalsum = 0;
        if (datalength > 0) {
            for (var i = 0; i < datalength; i++) {
                if (typeof arg.sender.dataSource.data()[i].Total_Net !== "undefined")
                    totalsum += arg.sender.dataSource.data()[i].Total_Net;

            }
        }

        $("#Net_Incurred_On_Deductible").val('$' + parseFloat(totalsum, 10).toFixed(2).replace(/(\d)(?=(\d{3})+\.)/g, "$1,").toString());
        var balance = (Number($("#Deductible_Filter").val().replace(/[^0-9\.-]+/g, ""))) - (Number($("#Net_Incurred_On_Deductible").val().replace(/[^0-9\.-]+/g, "")))

        $("#Balance_On_Deductible_Remaining").val('$' + parseFloat(balance, 10).toFixed(2).replace(/(\d)(?=(\d{3})+\.)/g, "$1,").toString());
        $("#paymentsCount").text(datalength);
    }

    function RefreshPaymentDetailsGrid() {

        $("#gridPaymentDetails").data("kendoGrid").dataSource.read({
            payeeId: $("#selPayeePayment").val(), invoicedDate: $("#Date_Invoice_Paid_Filter").val(), status: $("#FilterPaymentStatus").val(), invoiceNo: $("#Invoice_No_Filter").val()
        });


        //$('#selPayeePayment').find('option').remove().end();
        //var newOption_ = $('<option value=""></option>');
        //$('#selPayeePayment').append(newOption_);

        //$.ajax({
        //    url: "/ClaimDetailTabs/AjaxPickListPayeesLoad?claimId=" + $("#H_Claimsid").val(), success: function (result) {

        //        for (var i = 0; i < result.length; i++) {

        //            var newOption = $('<option value="' + result[i].Text + '">' + result[i].Text + '</option>');
        //            $('#selPayeePayment').append(newOption);

        //        }
        //    }
        //});
    }

    function clearFilters_Payment() {
        $("#selPayeePayment").val("");
        $("#Date_Invoice_Paid_Filter").val("");
        $("#FilterPaymentStatus").val("");
        $("#Invoice_No_Filter").val("");
        $("form.k-filter-menu button[type='reset']").trigger("click");

    }
    //string claimId, string payeeId, string invoicedDate, string status, string invoiceNo
    $(function () {

        $("#Deductible_Filter").val('$' + parseFloat($("#Excess").val(), 10).toFixed(2).replace(/(\d)(?=(\d{3})+\.)/g, "$1,").toString());

        $("#btnNewPayment").click(function () {

            changeControlState(false);
            clearPaymentControls(true);
            clearPaymentFiles();

            @{ 
                var claimId = this.ViewData["claimId"];
            }

            $.ajax({
                url: "/Billing/TeamGetCustomerForClaim?Claimsid=" + "@claimId",// $("#H_Claimsid").val(),
                success: function (data) {
                    $('#Payment_To_Name').val('');
                    $("#Payment_To").val('');

                    $('#Payment_To_Name').val(data.Text);
                    $("#Payment_To").val(data.Code);

                }
            });

            $("#Payment_Status").val("Received");

            //$("#btnSendPaymentEmail").hide();
            
        });

        $("#FilterBillables_Payment").click(function () {

            RefreshPaymentDetailsGrid();
        });

        $("#ClearFilters_Payment").click(function () {

            clearFilters_Payment();
            RefreshPaymentDetailsGrid();

        });


        $("#gridPaymentDetails").kendoGrid({

            dataSource: {
                transport: {
                    //read: "/ClaimDetailTabs/AjaxAttachmentsLoad?claimId=" + $("#H_Claimsid").val() + "&searchText=" + $("#AttachmentsearchTxt").val(),
                    read: "/ClaimDetailTabs/AjaxPaymentDetailsLoad?claimId=" + $("#H_Claimsid").val(),
                },
                pageSize: 100,
                parameterMap: function (options, operation) {
                    if (operation !== "read" && options.models) {
                        return { models: kendo.stringify(options.models) };
                    }
                },
                batch: false,
            },
            filterable: true,
            pageSize: 100,
            navigatable: true,
            pageable: true,
            sortable: true,
            dataBound: onPaymentDataBound,
            columns: [

                {
                    field: "Date_Invoice_Received",
                    title: "Date Received",
                    template: "<a  href='javascript:void(0);' onclick=\"loadPaymentDetail('#= H_Paymentsid #')\" '>#=Date_Invoice_Received#</a>"
                },
                {
                    field: "Invoice_Reference",
                    title: "Invoice Ref"
                },
                {
                    field: "Payee_Account_Name",
                    title: "Payee"
                },
                {
                    field: "Total_Gross",
                    title: "Total Gross"
                },
                {
                    field: "Total_Net",
                    title: "Total Net"
                },
                {
                    field: "Payment_Status",
                    title: "Payment Status"
                }
            ]
        });
    });


    

    function loadPaymentDetail(paymentId) {
        clearPaymentControls(false);
        clearPaymentFiles();

        $.ajax({
            url: "/ClaimDetailTabs/getPaymentById?paymentId=" + paymentId, success: function (result) {
                $("#H_Paymentsid").val(result.H_Paymentsid);
                //$("#ClaimRefNo_Payment").val(result.ClaimRefNo_Payment);
                $("#Payee_Account").val(result.Payee_Account);
                $("#Payee_Contact").val(result.Payee_Contact);
                $("#Payment_To").val(result.Payment_To);
                $("#Sent_To_Contact").val(result.Sent_To_Contact);
                $("#Invoice_Attached").val(result.Invoice_Attached);
                $("#H_Claimsid").val(result.H_Claimsid);
                $("#IsNew").val("false");
                $("#Reserve_Type").val(result.Reserve_Type);
                $("#Date_Invoice_Received").val(kendo.toString(kendo.parseDate(result.Date_Invoice_Received), "dd/MM/yyyy"));
                $("#Invoice_Reference").val(result.Invoice_Reference);

                if (result.AttachmentName) {

                    $('#paymentDetailAttachmentName').text(result.AttachmentName);
                    $('#paymentDetailAttachmentName').prop("href", "/ClaimDetailTabs/FileDownload?fileName=" + result.AttachmentSavedName);
                    $('#paymentDetailAttachmentName').css("display", "block");
                }

                $("#Payee_Type").val(result.Payee_Type);
                setSelect2TagsValue(result.Payee_Type);
                $("#Payee_Account_Name").val(result.Payee_Account_Name);
                $("#Payee_Contact_Name").val(result.Payee_Contact_Name);
              

                $("#Gst").val(result.Gst);
               
                $("#Date_Sent_For_Payment").val(kendo.toString(kendo.parseDate(result.Date_Sent_For_Payment), "dd/MM/yyyy"));
                $("#Payment_To_Name").val(result.Payment_To_Name);
                $("#Sent_To_Contact_Name").val(result.Sent_To_Contact_Name);
                $('#payment_phone').val(result.Phone);
                $("#payment_email").val(result.Email);
                $("#Payment_Status").val(result.Payment_Status);
                $("#Date_Invoice_Paid").val(kendo.toString(kendo.parseDate(result.Date_Invoice_Paid), "dd/MM/yyyy"));
                $("#Payment_Type").val(result.Payment_Type);
                $("#Payment_Method").val(result.Payment_Method);

                if (result.Is_Settlement) {
                    $("#Is_Settlement").prop("checked", true);
                    changeControlState(true);
                }
                else {
                    $("#Is_Settlement").prop("checked", false);
                    changeControlState(false);
                }

                $("#Is_Settlement").val(result.Is_Settlement);

                dynamicValidations_Payment();

                if (result.Gst_Included)
                    $("#Gst_Included").prop("checked", true);
                else
                    $("#Gst_Included").prop("checked", false);

                $("#Gst_Included").val(result.Gst_Included);

                $("#Total_Net").val(result.Total_Net);
                $("#Total_Gross").val(result.Total_Gross);

                $("#Payment_Amount").val(result.Payment_Amount);
                $("#Payment_Note").val(result.Payment_Note);
                //$("#Payment_Date").val(result.Payment_Date);
                $("#Payment_Date").val(kendo.toString(kendo.parseDate(result.Payment_Date), "dd/MM/yyyy"));

                $("#btnSendPaymentEmail").show();
                $('#PaymentDetailModal').modal('show');
            }
        });
    }


    function changeControlState(readonly) {
        $("#ClaimRefNo_Payment").prop('disabled', readonly);
        $("#Reserve_Type").prop('disabled', readonly);
        $(".dateCalendar_Date_Invoice").children().prop('disabled', readonly);
        $("#Invoice_Reference").prop('disabled', readonly);
        $("#uploadInvoiceAttach").prop('disabled', readonly);
        $("#Payee_Type").prop('disabled', readonly);
        $("#Payee_Account_Name").prop('disabled', readonly);
        $("#AccountNoModal_TSD").prop('disabled', readonly);
        $("#Payee_Contact_Name").prop('disabled', readonly);
        $("#ContactModal_Pd").prop('disabled', readonly);
        $("#Total_Gross").prop('disabled', readonly);
        $("#Gst_Included").prop('disabled', readonly);
        $("#Gst").prop('disabled', readonly);
        $("#Total_Net").prop('disabled', readonly);
        $(".dateCalendarDate_Sent_For_Payment").children().prop('disabled', readonly);
        $("#Payment_To_Name").prop('disabled', readonly);
        $("#Payment_To_Name_Pd").prop('disabled', readonly);
        $("#Sent_To_Contact_Name").prop('disabled', readonly);
        $("#Sent_To_Contact_Name_Pd").prop('disabled', readonly);
        $("#payment_phone").prop('disabled', readonly);
        $("#payment_email").prop('disabled', readonly);
        $("#Payment_Status").prop('disabled', readonly);
        $(".dateCalendarDate_Invoice_Paid").children().prop('disabled', readonly);
        $("#Payment_Type").prop('disabled', readonly);
        $("#Payment_Method").prop('disabled', readonly);
        $("#Is_Settlement").prop('disabled', readonly);
        $("#Payment_Amount").prop('disabled', readonly);
        $(".dateCalendarDate_Payment_Date").children().prop('disabled', readonly);
        $("#Payment_Note").prop('disabled', readonly);
        if (readonly)
            $("#btnSavePaymentDetail").hide();
        else
            $("#btnSavePaymentDetail").show();
    }

    function clearPaymentControls(isNew) {
        $("#H_Paymentsid").val("");
        $("#Payee_Account").val("");
        $("#Payee_Contact").val("");
        $("#Payment_To").val("");
        $("#Sent_To_Contact").val("");
        $("#Invoice_Attached").val("");
        //$("#H_Claimsid").val(result.H_Claimsid);
        $("#IsNew").val(isNew);
        //$("#ClaimRefNo_Payment").val(result.ClaimRefNo_Payment);
        $("#Reserve_Type").val("");
        $("#Date_Invoice_Received").val("");
        $("#Invoice_Reference").val("");
        $('#paymentDetailAttachmentName').text("");
        $("#Payee_Type").val("");
        $("#Payee_Account_Name").val("");
        $("#Payee_Contact_Name").val("");
        $("#Total_Gross").val("");
        $("#Gst_Included").val(true);
        $("#Gst").val("10");
        $("#Total_Net").val("");
        $("#Date_Sent_For_Payment").val("");
        $("#Payment_To_Name").val("");
        $("#Sent_To_Contact_Name").val("");
        $('#payment_phone').val("");
        $("#payment_email").val("");
        $("#Payment_Status").val("");
        $("#Date_Invoice_Paid").val("");
        $("#Payment_Type").val("");
        $("#Payment_Method").val("");
        $("#Is_Settlement").prop("checked", false);
        $("#Is_Settlement").val(false);
        dynamicValidations_Payment();
        $('.select2-selection.select2-selection--single').removeClass("alertError");
        $("#Payment_Amount").val("");
        $("#Payment_Note").val("");
        $("#Payment_Date").val("");
        $('#paymentDetailAttachmentName').hide();
    }

</script>