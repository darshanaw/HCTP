@model HonanClaimsWebApi.Models.MyActivity.ActivityReturnModel
@{
    ViewBag.Title = "Index";
    Layout = "~/Views/Shared/_Layout.cshtml";
}

<!-- SELECT2-->
<link rel="stylesheet" href="~/Content/vendor/select2/dist/css/select2.css">
<link rel="stylesheet" href="~/Content/vendor/select2-bootstrap-theme/dist/select2-bootstrap.css">

<div class="content-wrapper">
    <h3>
        My Activities
    </h3>
    <div class="col-md-3 mb">
        <div class="row">
            <div class="form-group mb">
                <label class="col-sm-4 control-label input-sm">Claim</label>
                <div class="col-sm-8">
                    @Html.DropDownListFor(m => m.ActivityClaim,
                    new SelectList(Model.ActivityClaim, "Code", "Text"),
                    "--Select--",
                    new { @class = "form-control input-sm", @onchange = "comboChange()" })
                </div>
            </div>
        </div>
    </div>

    <div class="col-md-3 mb">
        <div class="row">
            <div class="form-group mb">
                <label class="col-sm-4 control-label input-sm">Activity Owner</label>
                <div class="col-sm-8">
                    @Html.DropDownListFor(m => m.OwnerList,
                    new SelectList(Model.OwnerList, "Code", "Text"),
                    "--Select--",
                    new { @class = "form-control input-sm", @onchange = "comboChange()" })
                </div>
            </div>
        </div>
    </div>

    <div class="col-md-3 mb">
        <div class="row">
            <div class="form-group mb">
                <label class="col-sm-4 control-label input-sm">User</label>
                <div class="col-sm-8">
                    @{
                        if (Model.Activityusers.Count > 0)
                        {
                            @Html.DropDownListFor(m => m.Activityusers,
                        new SelectList(Model.Activityusers, "Code", "Text"),
                        
                        new { @class = "form-control input-sm", @onchange = "comboChange()" })
                        }
                        else
                        {
                            <select disabled class="form-control" id="Activityusers"></select>
                        }
                    }
                </div>
            </div>
        </div>
    </div>

    <div class="col-md-3 mb">
        <div class="row">
            <div class="form-group mb">
                <label class="col-sm-4 control-label input-sm">Customer</label>
                <div class="col-sm-8">
                    @Html.DropDownListFor(m => m.CustomerList,
                    new SelectList(Model.CustomerList, "Code", "Text"),
                    "--Select--",
                    new { @class = "form-control input-sm", @onchange = "comboChange()" })
                </div>
            </div>
        </div>
    </div>
    <div class="col-md-3 mb">
        <div class="input-group">
            <input type="text" class="form-control  input-sm" placeholder="Search for" id="searchTxt" aria-describedby="basic-addon2">
            <span class="input-group-addon pointer" id="btnsearchtext" data-toggle="modal" data-target="#PolicyModal"><i class="fa fa-search" aria-hidden="true"></i></span>
        </div>
    </div>
    <div class="col-md-6 mb">
        <div class="form-inline">
            <div class="form-group mb-0">
                <input id="overdue" type="checkbox" value="true">
                <label class="ml-10 input-sm">Show OverDue</label>
            </div>
            <div class="form-group mb-0">
                <input id="fivedays" type="checkbox" value="true">
                <label class="ml-10 input-sm">Due next 5 days</label>
            </div>
            <div style="display:none;" class="form-group mb-0">
                <input id="ShowDue" type="checkbox" value="true">
                <label class="ml-10 input-sm">Show with Due date</label>
            </div>
        </div>
    </div>
    <div class="col-md-3 mb">
        <div class="pull-right">
            <button id="clearFilter" type="button" class="btn btn-sm btn-default mr-20">Clear Filter</button>
            <button id="filterList" type="button" class="btn btn-sm btn-primary">Filter Activities</button>
        </div>
    </div>
       <div class="col-md-12 top-padding-eight">
           <div id="grid"></div>
       </div>
</div>

<div class="main-container">
    <div class="row mt-20">
        <div class="col-md-12">
            <div class="cust-search-1 mt-10">
                <h3 class="mt-20"></h3>
            </div>

            <div class="action-btn-2">
                <div class="pull-right mt-25">
                    
                </div>
            </div>
        </div>
    </div>

    <div class="row">
        <div class="col-md-12">
            <div class="cust-search-1">

                
            </div>


            <div class="action-btn-2">
                <div class="pull-right mt-25">
                   
                </div>
            </div>
        </div>
    </div> 
</div>


<!-- Modal -->
@*<div id="ActivityWorkFlowModal" class="modal fade ActivityWorkFlowModal" role="dialog" data-backdrop="false">
    <div class="modal-dialog modal-lg" style="width:850px">
        <div class="modal-content">
            <div class="modal-header">
                <button type="button" class="close ActivityWorkFlowModal_Close">&times;</button>
                <h4 class="modal-title">Activity Workflow Next Steps</h4>
            </div>
            <div class="modal-body">
                <div id="gridActivityWorkFlowNextSteps"></div>
                <br />
                <div class="col-md-12" style="padding-right:0px;margin-right:0px">
                    <div class="col-md-4"></div>
                    <div class="col-md-3">Deadline for Selected Task</div>
                    <div class="col-md-3">
                        <input type="text" class="form-control disabled" readonly id="txtWorkFlowCompletedDAte" />
                    </div>
                    <div class="col-md-2" style="padding-right:0px;margin-right:0px">
                        <input type="button" class="btn btn-primary pull-right" value="Complete" id="btnWorkFlowComplete" />
                    </div>
                </div>
            </div>
            <div class="modal-footer">
                <button type="button" class="btn btn-default ActivityWorkFlowModal_Close">Close</button>
            </div>
        </div>
    </div>
</div>*@


<!-- Modal -->
<div id="ActivityTasksDetailModal" class="modal fade ActivityTasksDetailModal" role="dialog" data-backdrop="true">
    <div class="modal-dialog  modal-lg">
        <div class="modal-content">
            <div class="modal-header">
                <button type="button" class="close" data-dismiss="modal">&times;</button>
                <h4 class="modal-title">Activity Tasks Detail</h4>
            </div>
            <div class="modal-body PaymentDetail_" style="height:500px">
                @*@{Html.RenderAction("_MyActivityTaskDetail", "MyActivity", new { claimId = this.ViewData["claimId"] });}*@
                @{Html.RenderAction("_MyActivityTaskDetail", "MyActivity");}

            </div>

        </div>
    </div>
</div>


<!-- Modal -->
<div id="ActivityWorkFlowModal" class="modal fade ActivityWorkFlowModal" role="dialog" data-backdrop="false">
    <div class="modal-dialog modal-lg" style="width:850px">
        <div class="modal-content">
            <div class="modal-header">
                <button type="button" class="close ActivityWorkFlowModal_Close">&times;</button>
                <h4 class="modal-title">Activity Workflow Next Steps</h4>
            </div>
            <div class="modal-body">
                <div id="gridActivityWorkFlowNextSteps"></div>
                <br />
                <div class="col-md-12" style="padding-right:0px;margin-right:0px">
                    <div class="col-md-4"></div>
                    <div class="col-md-3">Deadline for Selected Task</div>
                    <div class="col-md-3">
                        <input type="text" class="form-control disabled" readonly id="txtWorkFlowCompletedDAte" />
                    </div>
                    <div class="col-md-2" style="padding-right:0px;margin-right:0px">
                        <input type="button" class="btn btn-primary pull-right" value="Complete" id="btnWorkFlowComplete" />
                    </div>
                </div>
            </div>
            <div class="modal-footer">
                <button type="button" class="btn btn-default ActivityWorkFlowModal_Close">Close</button>
            </div>
        </div>
    </div>
</div>


<input type="hidden" id="Next_Seq_Dtl_Temp" name="Next_Seq_Dtl_Name" />
<input type="hidden" id="activityTaskId_wf" name="activityTaskId_wf" />
<input type="hidden" id="action_wf" name="action_wf" />
<input type="hidden" id="actionSeq_wf" name="actionSeq_wf" />
<input type="hidden" id="nextSeq_wf" name="nextSeq_wf" />
<input type="hidden" id="nextActivityId_wf" name="nextActivityId_wf" />
<input type="hidden" id="nextActivityDue_wf" name="nextActivityDue_wf" />
<input type="hidden" id="hdnClaimId" name="hdnClaimId" />
<input type="hidden" id="isActivityCompletionGrid" name="isActivityCompletionGrid" />

<!-- SELECT2-->
<script src="~/Content/vendor/select2/dist/js/select2.js"></script>

<script>
       

    $(".ActivityWorkFlowModal_Close").click(function () {
        RefreshActivityTasksGrid();
        $("#ActivityWorkFlowModal").modal("hide");
    });

    $("#btnWorkFlowComplete").click(function () {
        debugger;
        $("#Next_Seq_Dtl").val($("#Next_Seq_Dtl_Temp").val());

        $("#nextSeq_wf").val($("#Next_Seq_Dtl_Temp").val());
        var val = $("#isActivityCompletionGrid").val();
        if ($("#isActivityCompletionGrid").val() == 'true') {

            $.LoadingOverlay("show");

            $.ajax({

                url: "/ClaimDetailTabs/UpdateNextActivityWorkFlow?activityTaskId=" + $("#activityTaskId_wf").val() + "&action=" + $("#action_wf").val()
                + "&actionSeq=" + $("#actionSeq_wf").val() + "&nextSeq=" + $("#nextSeq_wf").val() + "&nextActivityId=" + $("#nextActivityId_wf").val()
                + "&nextActivityDue=" + $("#txtWorkFlowCompletedDAte").val() + "&claimId=" + $("#hdnClaimId").val(), success: function (result) {


                },
                complete: function () {

                    $.LoadingOverlay("hide");
                }
            });
            RefreshActivityTasksGrid();
        }
        $("#ActivityWorkFlowModal").modal('hide');
    })


    function RefreshActivityTasksGrid() {
        loadactivity();
    }

    function LoadgridActivityWorkFlowNextSteps(showpopUp, seqId, ClaimId) {
        debugger;
        $("#gridActivityWorkFlowNextSteps").kendoGrid({

            dataSource: {
                transport: {
                    read: "/ClaimDetailTabs/AjaxActivityWorkFlowLoad?claimId=" + ClaimId + "&completingActionSeq=" + seqId,
                },
                parameterMap: function (options, operation) {
                    if (operation !== "read" && options.models) {
                        return { models: kendo.stringify(options.models) };
                    }
                },
                batch: false,
                pageSize: 8
            },
            selectable: "row",
            filterable: true,
            navigatable: true,
            pageable: false,
            scrollable: true,
            sortable: true,
            dataBound: function (data) {
                var cnt = $('#gridActivityWorkFlowNextSteps').data('kendoGrid').dataSource.total();
                if (cnt > 0 && showpopUp) {
                    $("#ActivityWorkFlowModal").modal("show");
                    $("#txtWorkFlowCompletedDAte").val("");
                }
            },
            change: function (e) {
                var selectedRows = this.select();
                var selectedDataItems = [];
                for (var i = 0; i < selectedRows.length; i++) {
                    var dataItem = this.dataItem(selectedRows[i]);

                    var dCurrentId = "";

                    getNextTaskDueDate(dataItem.ActivityTaskId);

                    $("#Next_Seq_Dtl_Temp").val(dataItem.Seq_Act);
                    $("#nextActivityId_wf").val(dataItem.ActivityTaskId);
                    $("#nextActivityDue_wf").val(dataItem.DueDate_Act);
                }
                // selectedDataItems contains all selected data items
            },
            columns: [
                {
                    field: "ActivityTaskId",
                    title: "ActivityTaskId",
                    hidden: true
                },
                {
                    field: "DueDate_Act",
                    title: "DueDate_Act",
                    hidden: true
                },
                {
                    field: "Seq_Act",
                    title: "Seq"
                },
                {
                    field: "Stage_Act",
                    title: "Stage"
                },
                {
                    field: "Action_Act",
                    title: "Action",
                    //template: "<div style='cursor: pointer;color:blue'>#= Action_Act #</div>"
                    
                },
                {
                    field: "Owner_Act",
                    title: "Owner"
                },
                {
                    field: "Contact_Act",
                    title: "Contact"
                },
                {
                    field: "SLADays_Act",
                    title: "SLA (Days)"
                }
            ]
        });
    }

    function getNextTaskDueDate(nextTaskId) {

        $.ajax({
            url: "/ClaimDetailTabs/GetNextTaskDueDate?nextTaskId=" + nextTaskId, success: function (result) {
                $("#txtWorkFlowCompletedDAte").val(result);
                return result;
            }
        });
    }



    //===================================
    $(document).ready(function () {
        $('#overdue').prop("checked", false);
        $('#ShowDue').prop("checked", false);
        loadactivity();

        $('#ActivityClaim').select2({ width: '100%' });

        if ($("#ActivityClaim").length > 0) {
            $("#ActivityClaim").val($("#ActivityClaim").val()).trigger('change.select2');;
        }

    });

    function loadactivity() {

        var customDateEditor = function (container, options) {
            $('<input />')
                .appendTo(container)
                .kendoDatePicker({
                    format: "dd/MMM/yyyy",
                    change: function () {
                        var value = this.value();
                        console.log(value); //value is the selected date in the datepicker
                        var dataItem = null
                        var grid = $("#grid").data("kendoGrid");
                        grid.select().each(function () {
                            dataItem = grid.dataItem($(this));
                        });

                        if (dataItem != null && value != null) {
                            callDueDateEdit(dataItem.ActivityTaskId, value);
                        }

                    }
                });
        };

        var overdue = true;
        var nextfiveday = false;
        var showwithdate = true;
        var claimId = null;
        var owner = null;
        var customerId = null;
        var search = null;
        var assignId = null;

        //Get value list
        overdue = $("#overdue").is(":checked");
        nextfiveday = $("#fivedays").is(":checked");
        showwithdate = $("#ShowDue").is(":checked");

        //overdue = $('#overdue').val();
        //nextfiveday = $('#fivedays').val();
        //showwithdate = $('#ShowDue').val();
        var c = $('#ActivityClaim').val();
        if (c != null && c != "") { claimId = c }
        var o = $('#OwnerList').val();
        if (o != null && o != "") { owner = o }
        var cl = $('#CustomerList').val();
        if (cl != null && cl != "") { customerId = cl }
        var s = $('#searchTxt').val();
        if (s != null && s != "") { search = s }
        var a = $('#Activityusers').val();
        if (a != null && a != "") { assignId = a }
        //load grid list
        $("#grid").kendoGrid({
            dataSource: {
                type: "json",
                transport: {
                    read: "/MyActivity/GetMyActivity?overdue=" + overdue + "&nextfiveday=" + nextfiveday + "&showwithdate=" + showwithdate + "&claimId=" + claimId + "&owner=" + owner + "&customerId=" + customerId + "&searchtext=" + search + "&assignId=" + assignId
                },
                pageSize: 20,
                schema: {
                    model: {
                        id: "ActivityTaskId",
                        fields: {
                            ClaimRefNo: { editable: false },
                            Customer: { editable: false },
                            Seq: { editable: false },
                            Stage: { editable: false },
                            Action: { editable: false },
                            Owner: { editable: false },
                            Contact: { editable: false },
                            SLADays: { editable: false },
                            Complete: { editable: false }
                        }
                    }
                }
                //pageSize: 10,
                //serverPaging: false,
            },
            filterable: true,
            pageable: {
                refresh: true,
                pageSizes: [10, 20, 50, 100],
                buttonCount: 10
            },
            
            navigatable: true,
            sortable: true,
            editable: true,
            selectable: "single",
            columns: [{
                hidden: true,
                field: "ActivityTaskId",
                title: "ActivityTaskId"

            },
            {
                
                field: "ClaimRefNo",
                title: "Claims Ref #",
                //template: "<a href='/AccountList/AccountDetail?AccountId=#= AccountId #'>#= ClaimRefNo #</a>",
            },
            {
                field: "Customer",
                title: "Customer",
            }, 
            {
                field: "Seq",
                title: "Seq",
            }, 
            {
                field: "Stage",
                title: "Stage",
            },
            {
                field: "Action",
                title: "Action",
                template: "<a  href='javascript:void(0);' onclick=\"loadActivityTaskDetail('#= ActivityTaskId #')\" '>#=Action#</a>"
            },
            {
                field: "Owner",
                title: "Owner",
            },
            {
                field: "Contact",
                title: "Contact",
            },
            {
                field: "SLADays",
                title: "SLA(Days)",
            },
            {
                field: "DueDate",
                title: "Due Date",
                //format: "dd/MMM/yyyy",
                //template: "#= kendo.toString(kendo.parseDate(DueDate, 'yyyy-MM-dd'), 'MM/dd/yyyy') #",
                //editor: customDateEditor
            },
            {
                //template: '<input type="checkbox" #= Complete ? \'checked="checked" disabled\' : "" # class="chkbx" />', width: 110
                template: "<input onclick=\"InvokeNextSteps(this,'#= Seq #','#= ActivityTaskId #','#= Action #', '#= ClaimId #');\" type='checkbox' #if(Complete==true){ #checked disabled# } else { ## }# />"
            },
            {
                field: "CompletedDate",
                title: "Completed Date",
                template: "#if(CompletedDate === null){#  #}else{# #= kendo.toString(kendo.parseDate(CompletedDate), 'dd/MM/yyyy') #  #}#"
            },
            ],
            dataBound: function (e) {

                var dataItems = e.sender.dataSource.view();
                for (var j = 0; j < dataItems.length; j++) {

                    if (dataItems[j].RowColor == "Orange") {
                        var rid = dataItems[j].uid;
                        var row = e.sender.tbody.find("[data-uid='" + dataItems[j].uid + "']");
                         row.addClass("Oneday");
                    }
                    if (dataItems[j].RowColor == "Red") {
                        var rid = dataItems[j].uid;
                        var row = e.sender.tbody.find("[data-uid='" + dataItems[j].uid + "']");
                        row.addClass("OverDue");
                    }                  
                }

                //// get the index of the UnitsInStock cell
                //var columns = e.sender.columns;
                //var columnIndex = this.wrapper.find(".k-grid-header [data-field=" + "ActivityTaskId" + "]").index();
                //var today = new Date().setHours(0, 0, 0, 0);
                ////var todayminus = new Date().setDate(new Date().getDate() - 1);
                //// iterate the data items and apply row styles where necessary
                //var dataItems = e.sender.dataSource.view();
                //for (var j = 0; j < dataItems.length; j++) {

                //    var datecol = dataItems[j].get("DueDate");
                //    var compltecol = dataItems[j].get("Complete");
                //    var date = new Date(parseInt(datecol.substr(6))).setHours(0, 0, 0, 0);

                //    var dueminus = new Date(parseInt(datecol.substr(6))).setDate(-1);

                //    var rid = dataItems[j].uid;
                //    var row = e.sender.tbody.find("[data-uid='" + dataItems[j].uid + "']");
                //    if (today >= date && compltecol == false) {
                //        row.removeClass("Oneday");
                //        row.addClass("OverDue");
                //    }

                //    //var dayDiff = new Date(parseInt(datecol.substr(6))).getDate() - new Date().getDate();
                //    var dMonth = new Date(parseInt(datecol.substr(6))).getMonth() + 1;
                //    var dYear = new Date(parseInt(datecol.substr(6))).getFullYear();
                //    var dDay = new Date(parseInt(datecol.substr(6))).getDate();

                //    var cDay = new Date().getDate();
                //    var cMonth = new Date().getMonth() + 1;
                //    var cYear = new Date().getFullYear();
                //    var dif = dDay - cDay;

                //    if (dYear == cYear && dMonth == cMonth && dif == 1 && compltecol == false) {
                //        row.removeClass("OverDue");
                //        row.addClass("Oneday");
                //    }
                //}
            }
        });

        function callDueDateEdit(activityId, datetime) {

            var month = datetime.getMonth() + 1;
            var date = datetime.getDate();
            var year = datetime.getFullYear();
            var dateonly = month + "/" + date + "/" + year;

            $.get("/MyActivity/UpdateDueDate?activityId=" + activityId + "&dateTime=" + dateonly, function (data) {
                $('#grid').data('kendoGrid').dataSource.read();
                $('#grid').data('kendoGrid').refresh();
            });
        }

        //$("#grid .k-grid-content").on("change", "input.chkbx", function (e) {
        //    var grid = $("#grid").data("kendoGrid"),
        //        dataItem = grid.dataItem($(e.target).closest("tr"));

        //    LoadgridActivityWorkFlowNextSteps(true, dataItem.Seq, dataItem.ClaimId);
        //    //$.get("/MyActivity/UpdateasComplete?activityId=" + dataItem.ActivityTaskId + "&actionis=" + true + "&claimId=" + dataItem.ClaimId, function (data) {
        //    //    $('#grid').data('kendoGrid').dataSource.read();
        //    //    $('#grid').data('kendoGrid').refresh();
        //    //});

        //});
    }

    //123
    function InvokeNextSteps(chkBox, seqId, activityTaskId_wf, action_wf, ClaimId) {

        if (!$(chkBox).is(":checked")) {
            $(chkBox).prop("checked", false);
        }
        else {
            $("#isActivityCompletionGrid").val("true");

            $("#activityTaskId_wf").val(activityTaskId_wf);
            $("#action_wf").val(action_wf);
            $("#actionSeq_wf").val(seqId);
            $("#hdnClaimId").val(ClaimId);
            $("#ActivityWorkFlowModal").modal("show");
            $("#txtWorkFlowCompletedDAte").val("");
            LoadgridActivityWorkFlowNextSteps(true, seqId, ClaimId);

        }
    }

    function comboChange() {
        loadactivity();
    }

    $("#overdue, #fivedays , #ShowDue").change(function () {
        loadactivity();
    });

    $("#btnsearchtext").click(function () {
        loadactivity();
    })

    $("#clearFilter").click(function () {
        $('#overdue').prop("checked", true);
        $('#ShowDue').prop("checked", true);
        $('#fivedays').prop("checked", false);
        $('#ActivityClaim').val("");
        $('#CustomerList').val("");
        $('#searchTxt').val("");
        $('#Activityusers').val("");
        $('#OwnerList').val("");

        loadactivity();
    })

    $("#filterList").click(function () {
        loadactivity();
    })


    function loadActivityTaskDetail(activityId) {
        clearActivityTaskDetails();
        $("#H_Activitytasksid_Dtl").val(activityId);
        //refreshSequence();

        $.ajax({
            url: "/ClaimDetailTabs/GetGetActivityTaskDetailById?activityId=" + activityId, success: function (result) {
                $("#Seq_Dtl").val(result.Seq_Dtl);
                $("#Stage_Dtl").val(result.Stage_Dtl);
                $("#Actionid_Dtl").val(result.Actionid_Dtl);
                $("#Details_Dtl").val(result.Details_Dtl);
                $("#Owner_Dtl").val(result.Owner_Dtl);
                $("#Owner_Company_Name_Dtl").val(result.Owner_Company_Name_Dtl);
                $("#Owner_Company_Dtl").val(result.Owner_Company_Dtl);
                $("#Owner_Contact_Name_Dtl").val(result.Owner_Contact_Name_Dtl);
                $("#Owner_Contact_Dtl").val(result.Owner_Contact_Dtl);
                $("#Phone_Dtl").val(result.Phone_Dtl);
                $("#Email_Dtl").val(result.Email_Dtl);
                $("#Sla_Days_Dtl").val(result.Sla_Days_Dtl);
                $("#Last_Task_Completed_Dtl_String").val(result.Last_Task_Completed_Dtl_String);
                $("#Last_Task_Completed_Dtl").val(kendo.toString(kendo.parseDate(result.Last_Task_Completed_Dtl), 'dd/MM/yyyy'));
                $("#This_Task_Due_Date_Dtl").val(kendo.toString(kendo.parseDate(result.This_Task_Due_Date_Dtl), 'dd/MM/yyyy'));
                $("#Completed_Dtl").prop("checked", result.Completed_Dtl);
                $("#Skipped_Dtl").prop("checked", result.Skipped_Dtl);
                $("#High_Priority_Task_Dtl").prop("checked", result.High_Priority_Task_Dtl);
                $("#Completed_By_Name_Dtl").val(result.Completed_By_Name_Dtl);
                $("#Completed_By_Dtl").val(result.Completed_By_Dtl);
                $("#Completed_Date_Dtl").val(kendo.toString(kendo.parseDate(result.Completed_Date_Dtl), 'dd/MM/yyyy'));
                $("#dummyCompletedDate").val(kendo.toString(kendo.parseDate(result.Completed_Date_Dtl), 'dd/MM/yyyy'));
                $("#Update_Key_Contacts_Dtl").prop("checked", result.Update_Key_Contacts_Dtl);
                $("#Update_Key_Date_Dtl").prop("checked", result.Update_Key_Date_Dtl);
                $("#IsNew").val("false");
                $("#H_ClaimsRefid_Dtl").val(result.H_ClaimsRefid_Dtl);
                $("#H_Claimsid_Dtl").val(result.H_Claimsid_Dtl);

                if ($("#Owner_Company_Dtl").val() != "" && $("#Owner_Contact_Dtl").val() != "") {
                    $("#Update_Key_Contacts_Dtl").prop("disabled", false);
                }
                else {
                    $("#Update_Key_Contacts_Dtl").prop("disabled", "disabled");
                }

                if (result.Completed_Dtl)
                    $("#Update_Key_Date_Dtl").prop("disabled", false);
                else
                    $("#Update_Key_Date_Dtl").prop("disabled", "disabled");

            }
        });

        $('#ActivityTasksDetailModal').modal('show');
    }


</script>
<style>
    .OverDue {
        background-color: #ff6699 !important;
    }

    .Oneday {
        background-color: #ffcc99 !important;
    }
</style>