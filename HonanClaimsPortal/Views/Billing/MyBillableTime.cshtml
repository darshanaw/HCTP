@model HonanClaimsWebApi.Models.Billing.MyBillingModel

@{
    ViewBag.Title = "MyBillableTime";
    Layout = "~/Views/Shared/_Layout.cshtml";
}

<style>
    .BillingDetailModal {
        max-height: calc(1000vh - 2000px);
        overflow-y: auto;
    }
</style>

<!-- MOMENT JS-->
<script src="~/Content/vendor/moment/min/moment-with-locales.min.js"></script>

<!-- DATETIMEPICKER-->
<link href="~/Content/vendor/eonasdan-bootstrap-datetimepicker/build/css/bootstrap-datetimepicker.min.css" rel="stylesheet" />
<script src="~/Content/vendor/eonasdan-bootstrap-datetimepicker/build/js/bootstrap-datetimepicker.min.js"></script>

<script src="~/Scripts/jquery.unobtrusive-ajax.min.js"></script>


<div class="content-wrapper">
    <h3>
        My Billable Time
    </h3>

    <div class="row mb">
        <div class="col-md-12">
            <div class="col-md-4">
                <div class="form-group mb">
                    <label class="col-sm-4 control-label input-sm">Service User</label>
                    <div class="col-sm-8">
                        @Html.DropDownListFor(m => m.ServicesUserModel,
                    new SelectList(Model.ServicesUserModel, "Code", "Text"),
                    new { @class = "form-control input-sm", @onchange = "comboChange()" })
                    </div>
                </div>
            </div>
            <div class="col-md-4">
                <div class="form-group mb">
                    <label class="col-sm-4 control-label input-sm">Show Me</label>
                    <div class="col-sm-8">
                        @{
                            List<SelectListItem> listItems = new List<SelectListItem>();
                            listItems.Add(new SelectListItem
                            {
                                Text = "Today",
                                Value = "Today"
                            });
                            listItems.Add(new SelectListItem
                            {
                                Text = "This Week",
                                Value = "This Week",
                                Selected = true,
                            });
                            listItems.Add(new SelectListItem
                            {
                                Text = "Last Week",
                                Value = "Last Week",
                            });

                            listItems.Add(new SelectListItem
                            {
                                Text = "This Month",
                                Value = "This Month"
                            });

                            listItems.Add(new SelectListItem
                            {
                                Text = "This Quarter",
                                Value = "This Quarter"
                            });

                            listItems.Add(new SelectListItem
                            {
                                Text = "Last Quarter",
                                Value = "Last Quarter"
                            });

                            listItems.Add(new SelectListItem
                            {
                                Text = "This Year",
                                Value = "This Year"
                            });
                        }
                        @Html.DropDownListFor(model => model.ShowMe, listItems, new { @class = "form-control", @onchange = "comboChange()" })
                    </div>
                </div>
            </div>
            <div class="col-md-4">
                <div class="form-group mb">
                    <label class="col-sm-4 control-label input-sm">Customer</label>
                    <div class="col-sm-8">
                        @Html.DropDownListFor(m => m.CustomerUserModel,
                    new SelectList(Model.CustomerUserModel, "Code", "Text"),

                    new { @class = "form-control", @onchange = "comboChange()" })
                    </div>
                </div>
            </div>
        </div>
    </div>
    <div class="row mb">
        <div class="col-md-12">
            <div class="col-md-4">
                <div class="form-group mb">
                    <label class="col-sm-4 control-label input-sm">Service Date From</label>
                    <div class="col-sm-8">
                        <div class="input-group date dateCalendar" style="width:100%">
                            @Html.TextBoxFor(o => o.ServiceFromDate, new { @class = "form-control input-sm" })
                            <span class="input-group-addon btn btn-info btn-sm btn-outline datebtn" style="padding-bottom: 3.5px;">
                                <span class="fa fa-calendar"></span>
                            </span>
                        </div>
                    </div>
                </div>
            </div>
            <div class="col-md-4">
                <div class="form-group mb">
                    <label class="col-sm-4 control-label input-sm">Service Date To</label>
                    <div class="col-sm-8">
                        <div class="input-group date dateCalendar" style="width:100%">
                            @Html.TextBoxFor(o => o.ServiceToDate, new { @class = "form-control input-sm" })
                            <span class="input-group-addon btn btn-info btn-sm btn-outline datebtn" style="padding-bottom: 3.5px;">
                                <span class="fa fa-calendar"></span>
                            </span>
                        </div>
                    </div>
                </div>
            </div>
            <div class="col-md-4">
                <div class="form-group mb">
                    <label class="col-sm-4 control-label input-sm">Total Qty(Mins)</label>
                    <div class="col-sm-8">
                        @Html.TextBoxFor(m => m.TotalQ, new { @class = "form-control input-sm", @readonly = true })
                    </div>
                </div>
            </div>
        </div>
    </div>
    <div class="row mb">
        <div class="col-md-12 text-right">
            <div class="col-md-12 text-right">
                <div class="col-md-12 text-right">
                    <button id="addNew" onclick="loadBillingDetail('')" type="button" class="btn btn-primary mr-20">Add New Billing Time</button>
                    <button id="clearFilter" type="button" class="btn btn-default mr-20">Clear Filter</button>
                    <button id="filterList" type="button" class="btn btn-primary">Filter List</button>
                </div>
            </div>
        </div>
    </div>
    <div class="row mb top-padding-eight">
        <div class="col-md-12">
            <div id="grid"></div>
        </div>
    </div>
</div>

<!-- Modal -->
<div style="width:100%" id="BillingDetailModal" class="modal fade BillingDetailModal" role="dialog" data-backdrop="true">
    <div class="modal-dialog  modal-lg">
        <div class="modal-content">
            <div class="modal-header">
                <button type="button" class="close" data-dismiss="modal">&times;</button>
                <h4 class="modal-title">Timeslip</h4>
            </div>
            <div class="modal-body">
                @{Html.RenderAction("_TimeslipDetail", "Billing", new { @page = "MyBillable" });}

            </div>
            @*<div class="modal-footer">
                    <button type="button" class="btn btn-default" data-dismiss="modal">Close</button>
                </div>*@
        </div>
    </div>
</div>

<script>
    $(document).ready(function () {

        //$.LoadingOverlay("hide");

        $('.dateCalendar').datetimepicker({
            format: 'DD/MM/YYYY'
        });

        $("#ShowMe").val("This Week");
        loadMyBill();
    });

    function comboChange() {
        loadMyBill();
    }

    $("#filterList").click(function () {
        loadMyBill();
    });

    $("#clearFilter").click(function () {
        $("#ServiceFromDate").val("");
        $("#ServiceToDate").val("");
        $("#CustomerUserModel").val("");
        $("#ServicesUserModel").val("");
        $("#ShowMe").val("This Week");

        loadMyBill();
    });

    @*$("#addNew").click(function () {
        window.location.replace('@Url.Action("TimeslipDetail", "Billing", new { id = "" })');
    });*@



    function loadMyBill() {
        var showMe = null;
        var customerId = null;
        var serviceUserId = null;
        var serviceFromDate = null;
        var serviceToDate = null;

        //Get value list
        showMe = $("#ShowMe").val();
        customerId = $("#CustomerUserModel").val();
        serviceUserId = $("#ServicesUserModel").val();
        serviceFromDate = $("#ServiceFromDate").val();
        serviceToDate = $("#ServiceToDate").val();

        debugger
        //load grid list
        //var dataSource = new kendo.data.DataSource({
        //    transport: {
        //        read: "/Billing/TeamGetMyBillableTimes?showMe=" + showMe + "&customerId=" + customerId + "&serviceUserId=" + serviceUserId + "&serviceFromDate=" + serviceFromDate + "&serviceToDate=" + serviceToDate
        //    },
        //    pageSize: 10,
        //    pageable: true,
        //    schema: {
        //        data: "d", //root element that contains data array
        //        total: "total" //total amount of records
        //    }
        //});

        $("#grid").kendoGrid({
            dataSource: {
                serverPaging: false,
                transport: {
                    read: "/Billing/TeamGetMyBillableTimes?showMe=" + showMe + "&customerId=" + customerId + "&serviceUserId=" + serviceUserId + "&serviceFromDate=" + serviceFromDate + "&serviceToDate=" + serviceToDate
                },
                //pageSize: 10,            
                schema: {
                    data: "d",
                    total: "total"
                },
            },
            //serverPaging: false,
            //serverOperation: false,
            filterable: true,
            //pageSize: 10,
            navigatable: true,
            //pageable: true,
            height: 450,
            sortable: true,
            dataBound: ondatebound,
            columns: [
           {
               field: "ClaimRefNo",
               title: "Claims Ref #",
               template: "<a href='javascript:void(0);' onclick=\"loadBillingDetail('#= BillingId #')\" '>#= ClaimRefNo #</a>"
           },
           {
               field: "Customer",
               title: "Customer",
           },
           {
               field: "ServiceBy",
               title: "Service By",
               template: "<a href='javascript:void(0);' onclick=\"loadBillingDetail('#= BillingId #')\" '>#= ServiceBy #</a>"
           },
           {
               field: "ServiceDate",
               format: "dd/MMM/yyyy",
               title: "Service Date",
               template: "#if(ServiceDate === null){# '' #}else{# #= kendo.toString(kendo.parseDate(ServiceDate), 'dd-MM-yyyy') #  #}#"
           },
           {
               field: "StartTime",
               title: "Start Time",
           },
           {
               field: "Billable",
               title: "Billable $$",
           },
           {
               field: "Qty",
               title: "Units",
           },
           {
               field: "Checked",
               title: "Checked",
           },
           {
               field: "Invoiced",
               title: "Invoiced",
           },
            ]
        });

        function ondatebound(e) {
            var gridData = e.sender.dataSource.view();
            var subTotal = 0;
            for (var i = 0; i < gridData.length; i++) {
                subTotal = subTotal + gridData[i].Qty;
            }
            $("#TotalQ").val(subTotal);
        }
    }

    function loadBillingDetail(BillingId) {
        $.ajax({
            url: "/Billing/GetTimeslipDetail?BillingId=" + BillingId, success: function (result) {
                //alert("IN");
                if (result.Checked_Date != null) {
                    var Checked_Date = new Date(parseInt(result.Checked_Date.substr(6)));
                    var month = Checked_Date.getMonth() + 1;
                    var rChecked_Date = Checked_Date.getDate() + "/" + month + "/" + Checked_Date.getFullYear();
                }

                if (result.Invoice_Processed_Date != null) {
                    var Invoice_Processed_Date = new Date(parseInt(result.Invoice_Processed_Date.substr(6)));
                    var month = Invoice_Processed_Date.getMonth() + 1;
                    var rInvoice_Processed_Date = Invoice_Processed_Date.getDate() + "/" + month + "/" + Invoice_Processed_Date.getFullYear();
                }


                if (result.Service_Date != null) {
                    var ssDate = new Date(parseInt(result.Service_Date.substr(6)));
                    var dmonth = ssDate.getMonth() + 1;
                    result.Service_Date = ssDate.getDate() + "/" + dmonth + "/" + ssDate.getFullYear();
                }

                if (result.End_Time != null) {
                    var End_Time = new Date(parseInt(result.End_Time.substr(6)));
                    var year = End_Time.getFullYear();
                    if (year == 1) {
                        result.sEnd_Time = "";
                    } else {
                        var h = End_Time.getHours(), m = End_Time.getMinutes();
                        var _time = (h > 12) ? (h - 12 + ':' + ("0000" + m).slice(-2) + ' PM') : (h + ':' + ("0000" + m).slice(-2) + ' AM');
                        result.sEnd_Time = _time;
                    }
                }


                if (result.Start_Time != null) {
                    var Start_Time = new Date(parseInt(result.Start_Time.substr(6)));
                    var yesr = Start_Time.getFullYear();
                    if (year == 1) {
                        result.sStart_Time = "";
                    } else {
                        var h = Start_Time.getHours(), m = Start_Time.getMinutes();
                        var _time = (h > 12) ? (h - 12 + ':' + ("0000" + m).slice(-2) + ' PM') : (h + ':' + ("0000" + m).slice(-2) + ' AM');
                        result.sStart_Time = _time;
                    }
                }

                $("#H_Billingsid").val(result.H_Billingsid);
                $("#H_Claimsid_Billing").val(result.H_Claimsid_Billing);
                $("#Service_By").val(result.Service_By);
                $("#Is_Billable").val(result.Is_Billable);
                $("#Claim_No").val(result.Claim_No);
                $("#ActivityId").val(result.ActivityId);
                $("#Activity_Name").val(result.Activity_Name);
                $("#Policyid_Billing").val(result.Policyid_Billing);
                $("#Policy_Name_Billing").val(result.Policy_Name_Billing);
                $("#ClientId").val(result.ClientId);
                $("#Client_Name").val(result.Client_Name);
                $("#Service_Date").val(result.Service_Date);
                $("#Qty_Mins").val(result.Qty_Mins);
                $("#Rate").val(result.Rate);
                $("#Billable").val(result.Billable);

                $("#sEnd_Time").val(result.sEnd_Time);
                var Endtimepicker = $("#sEnd_Time").data("kendoTimePicker");
                Endtimepicker.value(result.sEnd_Time);

                $("#sStart_Time").val(result.sStart_Time);
                var Starttimepicker = $("#sStart_Time").data("kendoTimePicker");
                Starttimepicker.value(result.sStart_Time);


                if (result.Timeslip_Checked) {
                    $("#Timeslip_Checked").prop('checked', true);
                } else {
                    $("#Timeslip_Checked").prop('checked', false);
                }
                $("#Timeslip_Checked").val(result.Timeslip_Checked);


                $("#Checked_By").val(result.Checked_By);
                $("#Checked_Date").val(rChecked_Date);
                $("#Checked_By_Name").val(result.Checked_By_Name);

                if (result.Invoice_Processed) {
                    $("#Invoice_Processed").prop('checked', true);
                } else {
                    $("#Invoice_Processed").prop('checked', false);
                }
                $("#Invoice_Processed").val(result.Invoice_Processed);

                $("#Invoice_Processed_By").val(result.Invoice_Processed_By);
                $("#Invoice_Processed_Date").val(rInvoice_Processed_Date);
                $("#Invoice_Processed_By_Name").val(result.Invoice_Processed_By_Name);

                $("#Invoice_No").val(result.Invoice_No);
                $("#Invoice_Date").val(result.Invoice_Date);
                $("#Rate_Per_Unit").val(result.Rate_Per_Unit);
                $("#Units").val(result.Units);
                $("#Work_Done").val(result.Work_Done);
                $("#Service_By_Name").val(result.Service_By_Name);
                $("#Quarter").val(result.Quarter);
                $("#IsNew_Billable").val(result.IsNew);

                //var dateString = $("#Service_Date").val().substr(6);
                //var currentTime = new Date(parseInt(dateString));
                //var month = currentTime.getMonth() + 1;
                //var day = currentTime.getDate();
                //var year = currentTime.getFullYear();
                //var date = day + "/" + month + "/" + year;
                //$("#Service_Date").val(date);

                $('#BillingDetailModal').modal('show');
                debugger;
            }
        });
        $("#btnNewFileNote").click(function () {
            clearFileNoteControls();
        });
    }
</script>

<!-- Loading gif-->
<script src="~/Scripts/loadingoverlay.min.js"></script>
<script src="~/Scripts/loadingoverlay_progress.min.js"></script>