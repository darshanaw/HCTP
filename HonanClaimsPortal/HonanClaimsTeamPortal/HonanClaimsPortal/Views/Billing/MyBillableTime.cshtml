@model HonanClaimsWebApi.Models.Billing.MyBillingModel

@{
    ViewBag.Title = "MyBillableTime";
    Layout = "~/Views/Shared/_Layout.cshtml";
}

<!-- MOMENT JS-->
<script src="~/Content/vendor/moment/min/moment-with-locales.min.js"></script>

<!-- DATETIMEPICKER-->
<link href="~/Content/vendor/eonasdan-bootstrap-datetimepicker/build/css/bootstrap-datetimepicker.min.css" rel="stylesheet" />
<script src="~/Content/vendor/eonasdan-bootstrap-datetimepicker/build/js/bootstrap-datetimepicker.min.js"></script>

<div class="main-container">
    <div class="row mt-20">
        <div class="col-md-12">
            <div class="cust-search-2 mt-10">
                <h3 class="mt-20">My Billable Time</h3>
            </div>
            <div class="search-box-2">
                <div class="form-group mb-0">
                    <label for="sel1">Services User</label>
                    @Html.DropDownListFor(m => m.ServicesUserModel,
                    new SelectList(Model.ServicesUserModel, "Code", "Text"),
                    new { @class = "form-control", @onchange = "comboChange()" })
                </div>
            </div>
            <div class="action-btn-3">
                <div class="pull-right mt-25">
                    <button id="addNew" type="button" class="btn btn-primary">Add New Billing Time</button>
                </div>
            </div>
        </div>
    </div>
    <div class="row">
        <div class="col-md-12">
            <div class="cust-search-2">
                <div class="form-group mb-0">
                    @{
                        List<SelectListItem> listItems = new List<SelectListItem>();
                        listItems.Add(new SelectListItem
                        {
                            Text = "Today",
                            Value = "Today"
                        });
                        listItems.Add(new SelectListItem
                        {
                            Text = "This Week",
                            Value = "This Week",
                        });
                        listItems.Add(new SelectListItem
                        {
                            Text = "Last Week",
                            Value = "Last Week",
                        });

                        listItems.Add(new SelectListItem
                        {
                            Text = "This Month",
                            Value = "This Month"
                        });

                        listItems.Add(new SelectListItem
                        {
                            Text = "This Quarter",
                            Value = "This Quarter"
                        });

                        listItems.Add(new SelectListItem
                        {
                            Text = "Last Quarter",
                            Value = "Last Quarter"
                        });

                        listItems.Add(new SelectListItem
                        {
                            Text = "This Year",
                            Value = "This Year"
                        });
                    }
                    <label for="Team">Show Me</label>
                    @Html.DropDownListFor(model => model.ShowMe, listItems, "This Week", new { @class = "form-control", @onchange = "comboChange()" })
                </div>
            </div>
            <div class="search-box-2">
                <div class="form-group mb-0">
                    <label>Services Date From</label>
                    <div id="datetimepicker1" class="input-group">
                        @Html.TextBoxFor(o => o.ServiceFromDate, new { @class = "form-control" })
                        <span class="input-group-addon pointer" id="btnsearchtext" data-toggle="modal" data-target="#PolicyModal"><i class="fa fa-calendar" aria-hidden="true"></i></span>
                    </div>
                    @*@Html.ValidationMessageFor(o => o.Service_Date, String.Empty, new { @class = "parsley-errors-list filled", @style = "color:red" })*@
                </div>
            </div>
            <div class="action-btn-3">
                <div class="pull-right mt-25">
                    <button id="clearFilter" type="button" class="btn btn-default mr-20">Clear Filter</button>
                    <button id="filterList" type="button" class="btn btn-primary">Filter List</button>
                </div>
            </div>
        </div>
    </div>

    <div class="row mb-15">
        <div class="col-md-12">
            <div class="cust-search-2">
                <div class="form-group mb-0">
                    <label for="sel1">Customer</label>
                    @Html.DropDownListFor(m => m.CustomerUserModel,
                    new SelectList(Model.CustomerUserModel, "Code", "Text"),

                    new { @class = "form-control", @onchange = "comboChange()" })
                </div>
            </div>
            <div class="search-box-2">
                <div class="form-group mb-0">
                    <label>Services Date To</label>
                    <div id="datetimepicker2" class="input-group">
                        @Html.TextBoxFor(o => o.ServiceToDate, new { @class = "form-control input-sm" })
                        <span class="input-group-addon pointer" id="btnsearchtext" data-toggle="modal" data-target="#PolicyModal"><i class="fa fa-calendar" aria-hidden="true"></i></span>
                    </div>
                    @*@Html.ValidationMessageFor(o => o.Service_Date, String.Empty, new { @class = "parsley-errors-list filled", @style = "color:red" })*@
                </div>
            </div>
            <div class="action-btn-3">
                <div class="pull-right">
                    <label>Total Qty(Mins)</label>
                    @*<input type="text" name="EMP_NAME" value="@ViewData["TotalQ"].ToString()">*@
                    @*@ViewData["TotalQ"].ToString();*@
                    @Html.TextBoxFor(m => m.TotalQ, new { @class = "form-control input-sm", @readonly = true })
                    @*@ViewBag.TotalQ*@
                    @*@Html.TextBox("NameOfTheTextbox", (String)ViewBag.TotalQ)*@
                    @*<input type="text" value="@ViewBag.TotalQty" readonly />*@
                    @*@Html.TextBoxFor(o => @ViewBag.TotalQty, new { @class = "form-control input-sm", @readonly = true })*@
                </div>
            </div>
        </div>
    </div>

    <div id="grid"></div>
</div>
<script>
    $(document).ready(function () {
        $('#datetimepicker1').datetimepicker({
            format: 'DD/MM/YYYY'
        });

        $('#datetimepicker2').datetimepicker({
            format: 'DD/MM/YYYY'
        });

        $("#datetimepicker1").on("dp.change", function (e) {
            var tdate = $("#datetimepicker1").data().date;
            $("#ServiceFromDate").val(tdate);
        });


        $("#datetimepicker2").on("dp.change", function (e) {
            var tdate = $("#datetimepicker2").data().date;
            $("#ServiceToDate").val(tdate);
        });
        $("#ShowMe").val("This Week");
        loadMyBill();
    });

    function comboChange() {
        loadMyBill();
    }

    $("#filterList").click(function () {
        loadMyBill();
    });

    $("#clearFilter").click(function () {
        $("#ServiceFromDate").val("");
        $("#ServiceToDate").val("");
        $("#CustomerUserModel").val("");
        $("#ServicesUserModel").val("");
        $("#ShowMe").val("This Week");

        loadMyBill();
    });

    $("#addNew").click(function () {
        //TO:DO redirect to next page
        //window.location.replace('@Url.Action("AdminDetail", "AdminList", new { id = "" })');
    });

    function loadMyBill() {
        var showMe = null;
        var customerId = null;
        var serviceUserId = null;
        var serviceFromDate = null;
        var serviceToDate = null;

        //Get value list
        showMe = $("#ShowMe").val();
        customerId = $("#CustomerUserModel").val();
        serviceUserId = $("#ServicesUserModel").val();
        serviceFromDate = $("#ServiceFromDate").val();
        serviceToDate = $("#ServiceToDate").val();


        //load grid list
        $("#grid").kendoGrid({
            dataSource: {
                transport: {
                    read: "/Billing/TeamGetMyBillableTimes?showMe=" + showMe + "&customerId=" + customerId + "&serviceUserId=" + serviceUserId + "&serviceFromDate=" + serviceFromDate + "&serviceToDate=" + serviceToDate
                },
                pageSize: 10
            },
            filterable: true,
            pageSize: 10,
            navigatable: true,
            pageable: true,
            height: 450,
            sortable: true,
            dataBound: ondatebound,
            columns: [
           {
               field: "ClaimRefNo",
               title: "Claims Ref #",
           },
           {
               field: "Customer",
               title: "Customer",
           },

           {
               field: "ServiceBy",
               title: "ServiceBy",
           },

           {
               field: "ServiceDate",
               title: "ServiceDate",
           },

           {
               field: "StartTime",
               title: "StartTime",
           },

           {
               field: "Billable",
               title: "Billable $$",
           },
           {
               field: "Qty",
               title: "Qty(Mins)",
           },
           {
               field: "Checked",
               title: "Checked",
           },
           {
               field: "Invoiced",
               title: "Invoiced",
           },
            ]
        });

        function ondatebound(e) {
            var gridData = e.sender.dataSource.view();
                var subTotal = 0;
                for (var i = 0; i < gridData.length; i++) {
                    subTotal = subTotal + gridData[i].Qty;
                }
                $("#TotalQ").val(subTotal);
        }

    }
</script>
