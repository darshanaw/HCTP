@model HonanClaimsWebApi.Models.Claim.KeyContact

@{
    ViewBag.Title = "Index";
    Layout = "~/Views/Shared/_Layout.cshtml";
    TempData.Keep();
}
    

<!-- SELECT2-->
<link rel="stylesheet" href="~/Content/vendor/select2/dist/css/select2.css">
<link rel="stylesheet" href="~/Content/vendor/select2-bootstrap-theme/dist/select2-bootstrap.css">

<script>

    $(function () {

        $('#frmKeyContactDetail').submit(function () {

            if ($(this).valid()) {

                $.LoadingOverlay("show");
            }
        });

    });


    $(function () {

        $("#Description").select2({
            tags: true,
            theme: "bootstrap",
        });
    });

</script>

<style>
    .disabled {
        background-color: lightgray;
    }
</style>

@using (Html.BeginForm("NewKeyContact", "NewRecord", FormMethod.Post , new { @id = "frmKeyContactDetail", enctype = "multipart/form-data" }))
{
    @Html.HiddenFor(o => o.H_Claimsid, new { @id = "H_Claimsid_KCD" })
    @Html.HiddenFor(o => o.Contactid, new { @id = "Contactid_KCD" })
    @Html.HiddenFor(o => o.Accountid, new { @id = "Accountid_KCD" })
    @Html.HiddenFor(o => o.H_Keycontactsid)

    <div class="content-wrapper">
        <h3 class="hmb"> New Key Contact</h3>
        <div class="row">
            <div class="panel panel-default">
                <div class="panel-body">
                    <div class="main-container">
                        <div class="col-md-6">
                            @*<div class="col-md-12">
                                <div class="form-group mb">
                                    <label class="col-sm-3 control-label input-sm">Claim #</label>
                                    <div class="col-sm-9">                                       
                                        <div class="input-group">
                                            @Html.TextBoxFor(o => o.Claim_Ref_No, new { @id = "Claim_Ref_No_KCD", @class = "form-control input-sm disabled", @readonly = true })
                                            <span class="input-group-btn" id="storeShow" data-toggle="modal" data-target="#ClaimReferenceNumbersModal">
                                                <button type="button" class="mb-sm btn btn-info btn-sm btn-outline">
                                                    <i class="fa fa-binoculars"></i>
                                                </button>
                                            </span>
                                        </div>
                                    </div>
                                </div>
                            </div>*@

                            <div class="col-md-12">
                                <div class="form-group mb">
                                    <label class="col-sm-3 control-label input-sm">Claim Ref</label>
                                    <div class="col-sm-9">
                                        <div class="input-group">
                                            @Html.TextBoxFor(o => o.Claim_Ref_No, new { @id = "Claim_Ref_No_KCD",@class = "form-control input-sm disabled", @readonly = true })
                                            <span class="input-group-btn" id="storeShow" data-toggle="modal" data-target="#ClaimReferenceNumbersModal">
                                                <button type="button" class="mb-sm btn btn-info btn-sm btn-outline">
                                                    <i class="fa fa-binoculars"></i>
                                                </button>
                                            </span>
                                        </div>
                                    </div>
                                </div>
                            </div>
                            <div class="col-md-12">
                                <div class="form-group mb">
                                    <label class="col-sm-3 control-label input-sm">Description</label>
                                    <div class="col-sm-9">
                                        @Html.DropDownListFor(model => model.Description, new SelectList(Model.DescriptionList, "Text", "Text"), "",
                         new { @class = "form-control input-sm" })
                                    </div>
                                </div>
                            </div>
                            <div class="col-md-12">
                                <div class="form-group mb">
                                    <label class="col-sm-3 control-label input-sm">Contact</label>
                                    <div class="col-sm-9">
                                        <div class="input-group">
                                            @Html.TextBoxFor(o => o.Contact_Name, new { @id = "Contact_Name_KCD", @class = "form-control input-sm", @maxlength = 100 })
                                            <span id="ContactModal_KCD" class="input-group-btn" data-toggle="modal" data-target="#ContactModal_KCD_NEW">
                                                <button type="button" class="mb-sm btn btn-info btn-sm btn-outline" style="padding-bottom: 3.5px">
                                                    <i class="fa fa-binoculars"></i>
                                                </button>
                                            </span>
                                        </div>
                                    </div>
                                </div>
                            </div>

                            <div class="col-md-12">
                                <div class="form-group mb">
                                    <label class="col-sm-3 control-label input-sm">Account</label>
                                    <div class="col-sm-9">
                                        <div class="input-group">
                                            @Html.TextBoxFor(o => o.Account_Name, new { @id = "Account_Name_KCD", @class = "form-control input-sm", @maxlength = 100 })
                                            <span id="AccountNoModal_Pd" class="input-group-btn" data-toggle="modal" data-target="#AccountModal_KCD">
                                                <button type="button" class="mb-sm btn btn-info btn-sm btn-outline" style="padding-bottom: 3.5px">
                                                    <i class="fa fa-binoculars"></i>
                                                </button>
                                            </span>
                                        </div>
                                    </div>
                                </div>
                            </div>

                            <div class="col-md-12">
                                <div class="form-group mb">
                                    <label class="col-sm-3 control-label input-sm">Email Address</label>
                                    <div class="col-sm-9">
                                        @Html.TextBoxFor(o => o.Email_Address, new { @id = "Email_Address_KCD", @class = "form-control input-sm" })
                                    </div>
                                </div>
                            </div>

                            <div class="col-md-12">
                                <div class="form-group mb">
                                    <label class="col-sm-3 control-label input-sm">Phone</label>
                                    <div class="col-sm-9">
                                        @Html.TextBoxFor(o => o.Phone, new { @id = "Phone_KCD", @class = "form-control input-sm", @type = "number" })
                                    </div>
                                </div>
                            </div>

                            <div class="col-md-12">
                                <div class="form-group mb">
                                    <label class="col-sm-3 control-label input-sm">Address</label>
                                    <div class="col-sm-9">
                                        @Html.TextAreaFor(o => o.Address, new { @id = "Address_KCD", @class = "form-control input-sm" })
                                    </div>
                                </div>
                            </div>

                            <div class="col-md-12 top-padding">
                                <div class="form-group mb">
                                    <label class="col-sm-3 control-label input-sm">Notes</label>
                                    <div class="col-sm-9">
                                        @Html.TextAreaFor(o => o.Notes, new { @id = "Notes_KCD", @class = "form-control input-sm" })
                                    </div>
                                </div>
                            </div>

                            <div class="col-md-12" style="margin-top:1%">
                                <div class="panel-footer text-right">
                                    <div class="text-right" style="margin-right:2.5%">
                                        <button type="button" onclick="CancelKCD()" class="mb-sm btn btn-default mr-20 KeyContactDetailModalClose">Discard Changes</button>
                                        <button type="submit" class="mb-sm btn btn-primary">Save Changes</button>
                                    </div>
                                </div>
                            </div>

                        </div>
                    </div>
                  
                    
                    </div>
            </div>

        </div>
    </div>

}


<!-- Contact Modal -->
@*<div id="ContactModal_KCD" class="modal fade ContactModal_KCD" role="dialog" data-backdrop="false">
        <div class="modal-dialog">
            <div class="modal-content">
                <div class="modal-header">
                    <button type="button" class="close ContactModal_Close_KCD">&times;</button>
                    <h4 class="modal-title">Contact Lookup</h4>
                </div>
                <div class="modal-body">

                </div>
                <div class="modal-footer">
                    <button type="button" class="btn btn-default ContactModal_Close_KCD" id="ContactModal_Close_KCD">Close</button>
                </div>
            </div>
        </div>
    </div>*@

<!--Account  Modal -->
<div id="ContactModal_KCD_NEW" class="modal fade ContactModal_KCD_NEW" role="dialog" data-backdrop="false">
    <div class="modal-dialog">
        <div class="modal-content">
            <div class="modal-header">
                <button type="button" class="close ContactModal_KCD_Close">&times;</button>
                <h4 class="modal-title">Contact Lookup</h4>
            </div>
            <div class="modal-body">
                @Html.Partial("~/Views/Shared/_KeyContactDateContactLookup.cshtml", null) @*, new ViewDataDictionary { { "Policy_No", Model.Policy_No } }*@
            </div>
            <div class="modal-footer">
                <button type="button" class="btn btn-default ContactModal_KCD_Close" id="ContactModal_KCD_Close">Close</button>
            </div>
        </div>
    </div>
</div>

<!--Account  Modal -->
<div id="AccountModal_KCD" class="modal fade AccountModal_KCD" role="dialog" data-backdrop="false">
    <div class="modal-dialog">
        <div class="modal-content">
            <div class="modal-header">
                <button type="button" class="close AccountModal_KCD_Close">&times;</button>
                <h4 class="modal-title">Account Lookup</h4>
            </div>
            <div class="modal-body">
                @Html.Partial("~/Views/Shared/_KeyContactDateAccountLookup.cshtml", null) @*, new ViewDataDictionary { { "Policy_No", Model.Policy_No } }*@
            </div>
            <div class="modal-footer">
                <button type="button" class="btn btn-default AccountModal_KCD_Close" id="AccountModal_KCD_Close">Close</button>
            </div>
        </div>
    </div>
</div>


<script src="~/Content/vendor/select2/dist/js/select2.js"></script>

<script>
     //var kendoAutoCompleteService_By_Name = null;
   // $(document).ready(function () {
        //kendoAutoCompleteService_By_Name = $("#Claim_Ref_No_KCD").kendoAutoComplete({
        //    dataTextField: "Text",
        //    //dataValueField: "ID",
        //    minLength: 2,
        //    dataSource: {
        //        type: "json",
        //        transport: {
        //            read: "/ClaimDetailTabs/AjaxGetAssignedClaimNos?claimNo=",
        //        }
        //    },
        //    filter: "contains",
        //    select: onSelectService_By_Name,
        //}).data("kendoAutoComplete");

    //    function onSelectService_By_Name(e) {
    //        var dataItem = this.dataItem(e.item.index());
    //        $('#H_Claimsid_KCD').val(dataItem.Code);
    //        $('#Claim_Ref_No_KCD').val(dataItem.Text)
    //    }
    //});

    //$('#Claim_Ref_No_KCD').keyup(function () {

    //    var dd = $("#Claim_Ref_No_KCD").val();
    //    var dataSource = new kendo.data.DataSource({
    //        transport: {
    //            read: {
    //                url: "/ClaimDetailTabs/AjaxGetAssignedClaimNos?claimNo=" + $("#Claim_Ref_No_KCD").val(),
    //                dataType: "json"
    //            }
    //        }
    //    });
    //    kendoAutoCompleteService_By_Name.setDataSource(dataSource);
    //});

    var getUrlParameter = function getUrlParameter(sParam) {

        var sPageURL = decodeURIComponent(window.location.search.substring(1)),
            sURLVariables = sPageURL.split('&'),
            sParameterName,
            i;

        for (i = 0; i < sURLVariables.length; i++) {
            sParameterName = sURLVariables[i].split('=');

            if (sParameterName[0] === sParam) {
                return sParameterName[1] === undefined ? true : sParameterName[1];
            }
        }
    };

    $(document).ready(function () {

        var urlParam = getUrlParameter('claimRef');

        if (urlParam != '' && typeof urlParam !== 'undefined' && urlParam != 'NaN') {

            $("#Claim_Ref_No_KCD").val(urlParam);

            var urlParam_claimId = getUrlParameter('claimId');
            $("#H_Claimsid_KCD").val(urlParam_claimId);
        }

        $(".AccountModal_KCD_Close").click(function () {
            $("#AccountModal_KCD").modal("hide");
        });

        $(".ContactModal_KCD_Close").click(function () {
            $("#ContactModal_KCD_NEW").modal("hide");

        });

        $(".KeyContactDetailModalClose").click(function () {
            $("#H_Claimsid_KCD").val("");
            $("#Contactid_KCD").val("");
            $("#Accountid_KCD").val("");
            $("#Claim_Ref_No_KCD").val("");
            $("#Description").val("");
            $("#Contact_Name_KCD").val("");
            $("#Account_Name_KCD").val("");
            $("#Email_Address_KCD").val("");
            $("#Phone_KCD").val("");
            $("#Address_KCD").val("");
            $("#Notes_KCD").val("");
            $("#Description").val("");
            $("#H_Keycontactsid").val("");
        });

    });

    function GetResult_KCD(data) {
        $("#H_Claimsid_KCD").val("");
        $("#Contactid_KCD").val("");
        $("#Accountid_KCD").val("");
        $("#Claim_Ref_No_KCD").val("");
        $("#Description").val("");
        $("#Contact_Name_KCD").val("");
        $("#Account_Name_KCD").val("");
        $("#Email_Address_KCD").val("");
        $("#Phone_KCD").val("");
        $("#Address_KCD").val("");
        $("#Notes_KCD").val("");
        $("#Description").val("");
        $("#H_Keycontactsid").val("");

        $.LoadingOverlay("hide");
        //$('#grdKeyDates').data('kendoGrid').dataSource.read();
        //$('#grdKeyDates').data('kendoGrid').refresh();

        generateKeyContactsGrid();

        if ($('#KeyContactDetailModal').length > 0) {
            $('#KeyContactDetailModal').modal('hide');
        }
    }

    function CancelKCD() {

      @{
          var url = Session[HonanClaimsPortal.Helpers.SessionHelper.FromURL].ToString();
        }

        window.location.href = "@url";
    }
</script>
