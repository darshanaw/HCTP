@model  HonanClaimsWebApi.Models.Claim.BillingTabModel

@{ 
    string display = "";
}

@*<style>
    .BillingDetailModal {
        max-height: calc(100vh - 200px);
        overflow-y: auto;
    }
</style>*@


<div class="panel panel-default">
    <div class="panel-body">

        <div class="col-md-12">
         <div class="col-md-3">
                <div class="form-group mb">
                    <label class=" control-label input-sm">Service By: </label>
                    <div>
                        @Html.DropDownListFor(m => m.ServiceBy,
                            new SelectList(Model.ServiceByList, "Code", "Text"),"",
                            new { @class = "form-control" })
                    </div>
                </div>
            </div>
            <div class="col-md-3">
                <div class="form-group mb">
                    <label class="control-label input-sm">Service Date From: </label>
                    <div>
                        <div class="input-group date dateCalendar" style="width:100%">
                            @Html.TextBoxFor(o => o.Service_Date_From, new { @class = "form-control input-sm" })
                            <span class="input-group-addon btn btn-info btn-sm btn-outline datebtn" style="padding-bottom: 3.5px;">
                                <span class="fa fa-calendar"></span>
                            </span>
                        </div>
                    </div>
                </div>
            </div>
            <div class="col-md-3" id="divInvoiced">
                <div class="form-group mb">

                    <label class="control-label input-sm">Invoiced: </label>
                    <div>                       
                        @Html.DropDownListFor(model => model.Invoiced, new SelectList(Model.YesNoList),
                                    new { @class = "form-control input-sm" })
                    </div>
                </div>
            </div>
            <div class="col-md-3">
                <div class="form-group mb">
                    <div class="col-sm-6" style="padding-top:10%">
                        <input type="button" class="btn btn-default" id="ClearFilters" value="Clear Filters" />
                    </div>
                    <div class="col-sm-6" style="padding-top:10%">
                        <input type="button" class="btn btn-primary" id="FilterBillables" value="Filter Billables" />
                    </div>
                </div>
            </div>
            </div>

        <br />
        
        <div class="col-md-12">

            <div class="col-md-3">
                <div class="radioset-1">
                    <div class="radio">
                        <label><input type="radio" id="rdoBillable" value="true" name="rdoBill">Billable</label>
                    </div>
                    <div class="radio">
                        <label><input type="radio" id="rdoNonBillable" value="false" name="rdoBill">Non Billable</label>
                    </div>
                </div>
            </div>

            <div class="col-md-3">
                <div class="form-group mb">
                    <label class="control-label input-sm">Service Date To: </label>
                    <div>
                        <div class="input-group date dateCalendar" style="width:100%">
                            @Html.TextBoxFor(o => o.Service_Date_To, new { @class = "form-control input-sm" })
                            <span class="input-group-addon btn btn-info btn-sm btn-outline datebtn" style="padding-bottom: 3.5px;">
                                <span class="fa fa-calendar"></span>
                            </span>
                        </div>
                    </div>
                </div>
            </div>
            <div class="col-md-3" id="divInvoiceNo">
                <div class="form-group mb">
                    <label class="control-label input-sm">Invoice #: </label>
                    <div>
                        @Html.DropDownListFor(m => m.InvoiceNumber,
                            new SelectList(Model.InvoiceNumberList, "Code", "Text"),
                            new { @class = "form-control" })
                    </div>
                </div>
            </div>
            <div class="col-md-3">
                <div class="form-group mb">
                    <label class="control-label input-sm">Total Qty (Hrs): </label>
                    <div>
                        @Html.TextBoxFor(o => o.Total_Qty, new { @class = "form-control input-sm disabled", @readonly = true })
                    </div>
                </div>
            </div>

            </div>

        <div class="col-md-12" style="padding-left:0px">
            <div class="col-md-12" style="padding-left:0px">
                <div class="col-md-8">
                </div>
                <div class="col-md-4">
                    <input onclick="loadBillingDetail('')" type="button" value="New Time Slip" id="btnNewTimeSlip" class="btn btn-primary pull-right"  />
                </div>


            </div>
        </div>


    </div>
</div>

<!-- Modal -->
@*<div style="width:100%" id="BillingDetailModal" class="modal fade BillingDetailModal" role="dialog" data-backdrop="true">
    <div class="modal-dialog  modal-lg">
        <div class="modal-content">
            <div class="modal-header">
                <button type="button" class="close" data-dismiss="modal">&times;</button>
                <h4 class="modal-title">Timeslip</h4>
            </div>
            <div class="modal-body">
                @{Html.RenderAction("_TimeslipDetail", "Billing");}

            </div>
        </div>
    </div>
</div>*@


<div id="gridBillableTimes"></div>

<script>

    $(function () {

        if ($("#BillingMethod").val() != "Per Hour") {

            $("#divInvoiced").hide();
            $("#divInvoiceNo").hide();
        }

        $('.dateCalendar').datetimepicker({
            format: 'DD/MM/YYYY'
        });

        $("#FilterBillables").click(function () {
            
            RefreshGrid();
        });

        $("#ClearFilters").click(function () {
            ClearFilters();
        });

        $("#gridBillableTimes").kendoGrid({

            dataSource: {
                transport: {
                    read: "/ClaimDetailTabs/AjaxBillableTimesLoadLoad?claimId=" + $("#H_Claimsid").val(),
                },
                pageSize: 100,
                parameterMap: function (options, operation) {
                    if (operation !== "read" && options.models) {
                        return { models: kendo.stringify(options.models) };
                    }
                },
                batch: false,
            },
            filterable: true,
            pageSize: 100,
            navigatable: true,
            pageable: true,
            sortable: true,
            dataBound: onBillingDataBound,
            columns: [

                {
                    field: "ServiceBy",
                    title: "Service By",
                    //template: "<a href='/Billing/TimeslipDetail?BillingId=#=BillingId#'>#= ServiceBy #</a>"
                    template: "<a href='javascript:void(0);' onclick=\"loadBillingDetail('#= BillingId #')\" '>#= ServiceBy #</a>"
                },
                {
                    field: "ServiceDate",
                    title: "Service Date",
                    template: '#= kendo.toString(kendo.parseDate(ServiceDate), "dd/MM/yyyy")#'
                },
                {
                    field: "StartTime",
                    title: "Start Time"
                },
                {
                    field: "Qty",
                    title: "Qty (Mins)"
                },
                {
                    field: "Billable",
                    title: "Billable $$"
                },
                {
                    field: "Work_Done",
                    title: "Work Done"
                },
                {
                    field: "Checked",
                    title: "Checked"
                },
                {
                    field: "Invoiced",
                    title: "Invoiced"
                }
            ]
        });
    })

    function ClearFilters()
    {
        $("#ServiceBy").val("");
        $("#Service_Date_From").val("");
        $("#Service_Date_To").val("");
        $("#Invoiced").val("");
        $("#InvoiceNumber").val("");
        $("input[name='rdoBill']").prop('checked', false);

        RefreshGrid();
    }

    function RefreshGrid()
    {       
        $("#gridBillableTimes").data("kendoGrid").dataSource.read({
            serviceUserId: $("#ServiceBy").val(), isBillable: $("input[name='rdoBill']:checked").val(), serviceFromDate: $("#Service_Date_From").val(), serviceToDate: $("#Service_Date_To").val()
            , invoiced: $("#Invoiced").val(), invoiceNo: $("#InvoiceNumber").val()
        });
       
    }

    function onBillingDataBound(arg) {

        //Total sum of UnitsInStock field
        var datalength = arg.sender.dataSource.data().length;
        var totalsum = 0;
        if (datalength > 0) {
            for (var i = 0; i < datalength; i++) {
                if (typeof arg.sender.dataSource.data()[i].Qty !== "undefined")
                totalsum += arg.sender.dataSource.data()[i].Qty;
            }
        }
        
        $("#Total_Qty").val((totalsum / 60).toFixed(2));

        //UnitsInStock field sum of current page
        //var curretpagesum = 0;
        //var grid = $("#grid").data("kendoGrid");
        //$(grid.tbody).find('tr').each(function (index) {
        //    curretpagesum += parseInt($(this).find('td:eq(2)').html());
        //});
        //$("#txtCurrentPageSum").val(curretpagesum);
    }

    function loadBillingDetail(BillingId, startTime, endTime, timeDiff) {
        $.ajax({
            url: "/Billing/GetTimeslipDetail?BillingId=" + BillingId, success: function (result) {
               
                if (result.Checked_Date != null) {
                    var Checked_Date = new Date(parseInt(result.Checked_Date.substr(6)));
                    var month = Checked_Date.getMonth() + 1;
                    var rChecked_Date = Checked_Date.getDate() + "/" + month + "/" + Checked_Date.getFullYear();
                }

                if (result.Invoice_Processed_Date != null) {
                    var Invoice_Processed_Date = new Date(parseInt(result.Invoice_Processed_Date.substr(6)));
                    var month = Invoice_Processed_Date.getMonth() + 1;
                    var rInvoice_Processed_Date = Invoice_Processed_Date.getDate() + "/" + month + "/" + Invoice_Processed_Date.getFullYear();
                }


                if (result.Service_Date != null) {
                    var ssDate = new Date(parseInt(result.Service_Date.substr(6)));
                    var dmonth = ssDate.getMonth() + 1;
                    result.Service_Date = ssDate.getDate() + "/" + dmonth + "/" + ssDate.getFullYear();
                }

                if (result.End_Time != null) {
                    var End_Time = new Date(parseInt(result.End_Time.substr(6)));
                    var year = End_Time.getFullYear();
                    if (year == 1) {
                        result.sEnd_Time = "";
                    } else {
                        var h = End_Time.getHours(), m = End_Time.getMinutes();
                        var _time = (h > 12) ? (h - 12 + ':' + ("0000" + m).slice(-2) + ' PM') : (h + ':' + ("0000" + m).slice(-2) + ' AM');
                        result.sEnd_Time = _time;
                    }
                }


                if (result.Start_Time != null) {
                    var Start_Time = new Date(parseInt(result.Start_Time.substr(6)));
                    var yesr = Start_Time.getFullYear();
                    if (year == 1) {
                        result.sStart_Time = "";
                    } else {
                        var h = Start_Time.getHours(), m = Start_Time.getMinutes();
                        var _time = (h > 12) ? (h - 12 + ':' + ("0000" + m).slice(-2) + ' PM') : (h + ':' + ("0000" + m).slice(-2) + ' AM');
                        result.sStart_Time = _time;
                    }
                }

                $("#H_Billingsid").val(result.H_Billingsid);
                $("#H_Claimsid_Billing").val($("#H_Claimsid").val());
                $("#Service_By").val(result.Service_By);
                $("#Is_Billable").val(result.Is_Billable);
                $("#Billable").val(result.Billable);
                $("#Units").val(result.Units);

                if (timeDiff != '' && typeof timeDiff !== "undefined" && timeDiff != 'NaN') {
                    if (timeDiff < 6) {

                        $("#Units").val("1");

                    }
                }

                if (!result.Claim_No)
                {                    
                    $('#Claim_No').data('kendoAutoComplete').value($("#Claim_Reference_Num").val());

                   // $('#Claim_No').val($("#Claim_Reference_Num").val());
                    $("#H_Claimsid_Billing").val($("#H_Claimsid").val());


                    //get ClientId
                    $.ajax({
                        url: "/Billing/TeamGetCustomerForClaim?Claimsid=" + $("#H_Claimsid").val(),
                        success: function (data) {
                           
                            $('#Client_Name').val(data.Text);
                            $("#ClientId").val(data.Code);
                            
                            if (data.Order != null) {
                                var RatePHR = data.Order;
                                var RatePUNIT = (RatePHR / 60 * 6);
                                $("#Rate").val(data.Order);
                                $("#Rate_Per_Unit").val(RatePUNIT);
                                
                                var Rate_ = $("#Rate_Per_Unit").val();
                                var val_ = (Rate_ * $("#Units").val()).toFixed(2);
                                $("#Billable").val(val_);
                            }
                        }
                    });


                    //get policy Id
                    $.ajax({
                        url: "/Billing/TeamGetPolicyNoForClaim?Claimsid=" + $("#H_Claimsid").val(),
                        success: function (result) {
                            
                            $('#Policyid_Billing').val(result[0].Code);
                            $("#Policy_Name_Billing").val(result[0].Text);
                        }
                    });

                    //$("#Claim_No").data("kendoAutoComplete").trigger("select");
                 }
                else
                    $("#Claim_No").val(result.Claim_No);

                $("#ActivityId").val(result.ActivityId);
                $("#Activity_Name").val(result.Activity_Name);
                $("#Policyid_Billing").val(result.Policyid_Billing);
                $("#Policy_Name_Billing").val(result.Policy_Name_Billing);
                $("#ClientId").val(result.ClientId);
                $("#Client_Name").val(result.Client_Name);
                $("#Service_Date").val(result.Service_Date);
                $("#Qty_Mins").val(result.Qty_Mins);
                $("#Rate").val(result.Rate);
               
                if (startTime != '' && typeof startTime !== "undefined")
                    result.sStart_Time = startTime;

                $("#sStart_Time").val(result.sStart_Time);
                var Starttimepicker = $("#sStart_Time").data("kendoTimePicker");
                Starttimepicker.value(result.sStart_Time);

                if (endTime != '' && typeof endTime !== "undefined")
                    result.sEnd_Time = endTime;

                                
                $("#sEnd_Time").val(result.sEnd_Time);
                var Endtimepicker = $("#sEnd_Time").data("kendoTimePicker");
                Endtimepicker.value(result.sEnd_Time);

                if (result.Timeslip_Checked) {
                    $("#Timeslip_Checked").prop('checked', true);
                } else {
                    $("#Timeslip_Checked").prop('checked', false);
                }
                $("#Timeslip_Checked").val(result.Timeslip_Checked);

                $("#Checked_By").val(result.Checked_By);
                $("#Checked_Date").val(rChecked_Date);
                $("#Checked_By_Name").val(result.Checked_By_Name);

                if (result.Invoice_Processed) {
                    $("#Invoice_Processed").prop('checked', true);
                } else {
                    $("#Invoice_Processed").prop('checked', false);
                }
                $("#Invoice_Processed").val(result.Invoice_Processed);

                $("#Invoice_Processed_By").val(result.Invoice_Processed_By);
                $("#Invoice_Processed_Date").val(rInvoice_Processed_Date);
                $("#Invoice_Processed_By_Name").val(result.Invoice_Processed_By_Name);

                $("#Invoice_No").val(result.Invoice_No);
                $("#Invoice_Date").val(result.Invoice_Date);
                $("#Rate_Per_Unit").val(result.Rate_Per_Unit);
                

                $("#Work_Done").val(result.Work_Done);
                $("#Service_By_Name").val(result.Service_By_Name);
                $("#Quarter").val(result.Quarter);

                if (BillingId)
                    $("#IsNew_Billable").val(false);
                else
                    $("#IsNew_Billable").val(true);
               
                //var dateString = $("#Service_Date").val().substr(6);
                //var currentTime = new Date(parseInt(dateString));
                //var month = currentTime.getMonth() + 1;
                //var day = currentTime.getDate();
                //var year = currentTime.getFullYear();
                //var date = day + "/" + month + "/" + year;
                //$("#Service_Date").val(date);

                //if (startTime && typeof startTime !== "undefined")
                //    $("#sStart_Time").val(startTime);

                //if (endTime && typeof endTime !== "undefined")
                //    $("#sEnd_Time").val(endTime);
                
                $('#BillingDetailModal').modal('show');
            }
        });
        $("#btnNewFileNote").click(function () {
            clearFileNoteControls();
        });
    }

    //function loadBillingDetail(BillingId) {
    //    $.ajax({
    //        url: "/Billing/GetTimeslipDetail?BillingId=" + BillingId, success: function (result) {

    //            if (result.Checked_Date != null) {
    //                var Checked_Date = new Date(parseInt(result.Checked_Date.substr(6)));
    //                var month = Checked_Date.getMonth() + 1;
    //                var rChecked_Date = Checked_Date.getDate() + "/" + month + "/" + Checked_Date.getFullYear();
    //            }

    //            if (result.Service_Date == null) {

    //                var ssDate = new Date();
    //                var dmonth = ssDate.getMonth() + 1;
    //                result.Service_Date = ssDate.getDate() + "/" + dmonth + "/" + ssDate.getFullYear();
                  
    //            }
               
               
    //            if (result.End_Time != null) {
    //                var End_Time = new Date(parseInt(result.End_Time.substr(6)));
    //                var year = End_Time.getFullYear();
    //                if (year == 1) {
    //                    result.sEnd_Time = "";
    //                } else {
    //                    var h = End_Time.getHours(), m = End_Time.getMinutes();
    //                    var _time = (h > 12) ? (h - 12 + ':' + ("0000" + m).slice(-2) + ' PM') : (h + ':' + ("0000" + m).slice(-2) + ' AM');
    //                    result.sEnd_Time = _time;
    //                }
    //            }


    //            if (result.Start_Time != null) {
    //                var Start_Time = new Date(parseInt(result.Start_Time.substr(6)));
    //                var yesr = Start_Time.getFullYear();
    //                if (year == 1) {
    //                    result.sStart_Time = "";
    //                } else {
    //                    var h = Start_Time.getHours(), m = Start_Time.getMinutes();
    //                    var _time = (h > 12) ? (h - 12 + ':' + ("0000" + m).slice(-2) + ' PM') : (h + ':' + ("0000" + m).slice(-2) + ' AM');
    //                    result.sStart_Time = _time;
    //                }
    //            }



    //            $("#H_Billingsid").val(result.H_Billingsid);
    //            $("#H_Claimsid").val(result.H_Claimsid);
    //            $("#Service_By").val(result.Service_By);
    //            $("#Is_Billable").val(result.Is_Billable);
    //            if (!result.Claim_No)
    //            {
    //                $('#Claim_No').data('kendoAutoComplete').select($("#Claim_Reference_Num").val());
    //                //$('#Claim_No').data('kendoAutoComplete').value($("#Claim_Reference_Num").val());
    //             }
    //            else
    //                $("#Claim_No").val(result.Claim_No);
    //            $("#ActivityId").val(result.ActivityId);
    //            $("#Activity_Name").val(result.Activity_Name);
    //            $("#Policyid").val(result.Policyid);
    //            $("#Policy_Name").val(result.Policy_Name);
    //            $("#ClientId").val(result.ClientId);
    //            $("#Client_Name").val(result.Client_Name);
    //            $("#Service_Date").val(result.Service_Date);
    //            $("#sStart_Time").val(result.sStart_Time);
    //            //$("#Start_Time_MM").val(result.Start_Time_MM);
    //            $("#sEnd_Time").val(result.sEnd_Time);
    //            //$("#End_Time_MM").val(result.End_Time_MM);
    //            $("#Qty_Mins").val(result.Qty_Mins);
    //            $("#Rate").val(result.Rate);
    //            $("#Billable").val(result.Billable);

    //            if (result.Timeslip_Checked) {
    //                $("#Timeslip_Checked").prop('checked', true);
    //            } else {
    //                $("#Timeslip_Checked").prop('checked', false);
    //            }
    //            $("#Timeslip_Checked").val(result.Timeslip_Checked);


    //            $("#Checked_By").val(result.Checked_By);
    //            $("#Checked_Date").val(rChecked_Date);
    //            $("#Checked_By_Name").val(result.Checked_By_Name);

    //            if (result.Invoice_Processed) {
    //                $("#Invoice_Processed").prop('checked', true);
    //            } else {
    //                $("#Invoice_Processed").prop('checked', false);
    //            }
    //            $("#Invoice_Processed").val(result.Invoice_Processed);

    //            $("#Invoice_Processed_By").val(result.Invoice_Processed_By);
    //            $("#Invoice_Processed_Date").val(result.Invoice_Processed_Date);
    //            $("#Invoice_Processed_By_Name").val(result.Invoice_Processed_By_Name);

    //            $("#Invoice_No").val(result.Invoice_No);
    //            $("#Invoice_Date").val(result.Invoice_Date); 
    //            $("#Rate_Per_Unit").val(result.Rate_Per_Unit);
    //            $("#Units").val(result.Units);
    //            $("#Work_Done").val(result.Work_Done);
    //            $("#Service_By_Name").val(result.Service_By_Name);
    //            $("#Quarter").val(result.Quarter);
    //            $("#IsNew").val(result.IsNew);
    //            $('#BillingDetailModal').modal('show');
    //        }
    //    });


    //    $("#btnNewFileNote").click(function () {

    //        clearFileNoteControls();

    //    });

    //}

</script>