@model HonanClaimsWebApi.Models.ContactAccountModel
@{
    ViewBag.Title = "Index";
    Layout = "~/Views/Shared/_Layout.cshtml";
}

@using (Html.BeginForm("AddNewContact", "NewContactAccount", FormMethod.Post, new { @class = "", role = "form" }))
{
    <div class="main-container">
        <div class="row">
            <div class="col-md-12">
                <div class="cust-search-1">
                    <h3 class="mt-20">New Contact/Account</h3>
                </div>
            </div>
        </div>

        <div class="row">
            <div class="col-md-6">
                <div class="form-group">
                    <label>Contact</label>
                    @Html.TextBoxFor(m => m.Contact, new { @class = "form-control" })
                </div>
                <div class="form-group">
                    <label>Account</label>
                    <div class="input-group">
                        @Html.TextBoxFor(m => m.Account, new { @class = "form-control" })
                        @Html.HiddenFor(m => m.AccountId)
                        <span class="input-group-addon pointer" id="Accountlookup" data-toggle="modal" data-target="#PolicyModal"><i class="fa fa-search" aria-hidden="true"></i></span>
                    </div>
                </div>
                <div class="form-group">
                    <label>Phone</label>
                    @Html.TextBoxFor(m => m.Phone, new { @class = "form-control" })
                </div>
                <div class="form-group">
                    <label>Email</label>
                    @Html.TextBoxFor(m => m.Email, new { @class = "form-control" })
                </div>
                <div class="form-group">
                    <label>Website</label>
                    @Html.TextBoxFor(m => m.Website, new { @class = "form-control" })
                </div>
            </div>
            <div class="col-md-6">
                <div class="form-group">
                    <label>Address1</label>
                    @Html.TextBoxFor(m => m.Address1, new { @class = "form-control" })
                </div>
                <div class="form-group">
                    <label>Address2</label>
                    @Html.TextBoxFor(m => m.Address2, new { @class = "form-control" })
                </div>
                <div class="form-group">
                    <label>City</label>
                    @Html.TextBoxFor(m => m.City, new { @class = "form-control" })
                </div>
                <div class="form-group">
                    <label>State</label>
                    @Html.TextBoxFor(m => m.State, new { @class = "form-control" })
                </div>
                <div class="form-group">
                    <label>PostCode</label>
                    @Html.TextBoxFor(m => m.PostCode, new { @class = "form-control" })
                </div>
            </div>
        </div>
    </div>
    <hr />
        <div class="main-container">
            <div class="row">
                <div class="col-md-6">
                    <h4>Contact Information</h4>
                    <div class="form-group">
                        <label for="email">Title</label>
                        @Html.HiddenFor(m => m.Title)
                        @Html.DropDownListFor(m => m.PickTitle,
                        new SelectList(Model.PickTitle, "Code", "Text"),
                        "--Select--",
                        new { @class = "form-control", @onchange = "comboTitleChange()" })
                    </div>
                    <div class="form-group">
                        <label>Work Phone</label>
                        @Html.TextBoxFor(m => m.ContactWorkPhone, new { @class = "form-control" })
                    </div>
                    <div class="form-group">
                        <label>Mobile</label>
                        @Html.TextBoxFor(m => m.ContactMobile, new { @class = "form-control" })
                    </div>
                    <div class="form-group">
                        <label>Fax</label>
                        @Html.TextBoxFor(m => m.ContactFax, new { @class = "form-control" })
                    </div>
                </div>
                <div class="col-md-6">
                    <h4>Account Information</h4>
                    <div class="form-group">
                        <label>Phone</label>
                        @Html.TextBoxFor(m => m.AccountPhone, new { @class = "form-control" })
                    </div>
                    <div class="form-group">
                        <label>Fax</label>
                        @Html.TextBoxFor(m => m.AccountFax, new { @class = "form-control" })
                    </div>
                    <div class="form-group">
                        <label>Type</label>
                        @Html.HiddenFor(m => m.AccountType)
                        @Html.DropDownListFor(m => m.PickTypes,
                        new SelectList(Model.PickTypes, "Code", "Text"),
                        "--Select--",
                        new { @class = "form-control" })
                    </div>
                    <div class="form-group">
                        <label>Account Manager</label>
                        @Html.HiddenFor(m => m.AccountManagerName)
                        @Html.HiddenFor(m => m.AccountManagerId)
                        <input id="Manager" class="form-control"/>
                    </div>
                </div>
            </div>
            <div class="row">
                <div class="col-md-12">
                    <div class="pull-right">
                        <button type="button" class="btn btn-default mr-20">Cancel</button>
                        <button type="submit" class="btn btn-primary">Save</button>
                    </div>
                </div>
            </div>
        </div>
}

<!--Modal-->
<div id="AccountModal" class="modal fade OcModal" role="dialog" data-keyboard="false">
    <div class="modal-dialog">
        <div class="modal-content">
            <div class="modal-header">
                <button type="button" class="close" data-dismiss="modal">&times;</button>
                <h4 class="modal-title">Contact Lookup</h4>
            </div>

            <div class="modal-body">
                <input style="width:200px; text-align:right;" type="text" class="form-control" id="Accsearch">
                <div id="lookupAccountGrid"></div>
            </div>
            <div class="modal-footer">
                <button type="button" class="btn btn-default" data-dismiss="modal">Close</button>
            </div>
        </div>
    </div>
</div>

<script>



    $(document).ready(function () {
        LoadMagaer();

        $('#Accountlookup').click(function () {

            $("#lookupAccountGrid").kendoGrid({
                dataSource: {
                    type: "json",
                    transport: {
                        read: "/AdminList/GetLookupAccounts"
                    },
                    pageSize: 10
                },
                dataBound: function (e) {
                    $('#AccountModal').modal('show');
                },
                height: 550,
                sortable: true,
                serverPaging: true,
                pageable: {
                    refresh: true,
                    pageSizes: true,
                    buttonCount: 10
                },
                columns: [{
                    hidden: true,
                    field: "AccountId",
                    title: "AccountId"
                },
                {
                    template: '<a id="#= AccountId #" onclick="accountClick(this)">#= AccountName #</a>',
                    title: "Account Name",
                },
                {
                    field: "AccountType",
                    title: " Account Type",
                }
                ]
            });



        });

    })

    function accountClick(e) {
        $('#AccountId').val(e.id);
        $("#Account").val(e.text);
        $('#AccountModal').modal('hide');
    }

    function comboTypeChange() {
        $('#AccountType').val($('#PickTypes').val());
    }

    function comboTitleChange() {
        $('#Title').val($('#PickTitle').val());
    }

    function LoadMagaer() {
        debugger;
        var AccountId = $('#AccountManagerId').val();
        if (AccountId != null && AccountId != "") {
            $.get("/NewContactAccount/GetManagerList", function (data) {
                $("#Manager").kendoAutoComplete({
                    dataTextField: "Text",
                    filter: "contains",
                    minLength: 2,
                    dataSource: data,
                    select: onSelect
                });

                var text = getdisplayText(data, AccountId);
                $('#AccountManagerName').val(text);
                $("#Manager").data("kendoAutoComplete").value(text);

            });
        }

        function getdisplayText(listItems, Code) {
            var text = null;
            for (var i = 0; i < listItems.length; i++) {
                if (listItems[i].Code == Code) {
                    text = listItems[i].Text;
                    break;
                }
            }
            return text;
        }

        function onSelect(e) {
            var dataItem = this.dataItem(e.item.index());
            $('#AccountManagerId').val(dataItem.Code);
            $('#AccountManagerName').val(dataItem.Text);

        }
    }

</script>
